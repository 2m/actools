<mui:Cell x:Class="AcManager.UserControls.RaceGridEditorColumn" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:t="http://acstuff.ru/app/tools"
        xmlns:c="http://acstuff.ru/app/controls" xmlns:uc="clr-namespace:AcManager.UserControls" xmlns:g="clr-namespace:AcManager" mc:Ignorable="d"
        d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance c:RaceGridViewModel}" x:Name="This"
        mui:InputBindingBehavior.PropagateInputBindingsToWindow="True">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ComboBox.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ButtonWithComboBox.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcSpecific.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/Converters.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="NonTransparent" TargetType="mui:ModernButton" BasedOn="{StaticResource {x:Type mui:ModernButton}}">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource FlatListBoxItem}">
                <EventSetter Event="PreviewMouseDoubleClick" Handler="Item_OnPreviewDoubleClick" />
            </Style>

            <DataTemplate x:Key="Detailed.CarDataTemplate" DataType="{x:Type c:RaceGridEntry}">
                <StackPanel Orientation="Horizontal">
                    <mui:BetterImage Filename="{Binding Car.BrandBadge}" Width="16" Height="16" Margin="0 0 4 0" ClearOnChange="True" />
                    <TextBlock Text="{Binding Car.DisplayName}" VerticalAlignment="Center" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="Detailed.SkinDataTemplate" DataType="{x:Type c:RaceGridEntry}">
                <DockPanel MouseLeftButtonUp="OpponentSkin_OnMouseLeftButtonDown" Background="Transparent">
                    <mui:BetterImage x:Name="Livery" Filename="{Binding CarSkin.LiveryImage}" Width="16" Height="16" Margin="0 0 4 0" DockPanel.Dock="Left"
                            ClearOnChange="True" />
                    <Button x:Name="RandomButton" DockPanel.Dock="Right" Width="16" Height="16" Margin="4 0 0 0" VerticalAlignment="Center"
                            RenderOptions.EdgeMode="Aliased" Padding="2" Command="{Binding RandomSkinCommand}">
                        <Path Data="M0,0 L7,7 M7,0 L0,7 Z" Width="8" Height="8"
                                Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" VerticalAlignment="Center"
                                HorizontalAlignment="Center" StrokeThickness="1" />
                    </Button>
                    <TextBlock x:Name="TextBox" Text="{Binding CarSkin.DisplayName}" mui:WatermarkService.Watermark="Random" VerticalAlignment="Center" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding CarSkin}" Value="{x:Null}">
                        <Setter TargetName="Livery" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="RandomButton" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                        <Setter TargetName="TextBox" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="Detailed.NameDataTemplate" DataType="{x:Type c:RaceGridEntry}">
                <mui:BetterTextBox x:Name="TextBox" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Placeholder="Random"
                        Style="{StaticResource Borderless.White}" />
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                        <Setter TargetName="TextBox" Property="mui:WatermarkService.Watermark"
                                Value="{Binding PlayerName, Source={x:Static t:SettingsHolder.Drive}}" />
                        <Setter TargetName="TextBox" Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="Detailed.NationalityDataTemplate" DataType="{x:Type c:RaceGridEntry}">
                <mui:BetterTextBox x:Name="TextBox" Text="{Binding Nationality, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Placeholder="Random"
                        Style="{StaticResource Borderless.White}" />
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                        <Setter TargetName="TextBox" Property="Placeholder" Value="{Binding PlayerNationality, Source={x:Static t:SettingsHolder.Drive}}" />
                        <Setter TargetName="TextBox" Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="Detailed.AiDataTemplate" DataType="{x:Type c:RaceGridEntry}">
                <mui:BetterTextBox x:Name="TextBox" Text="{Binding AiLevel, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Placeholder="Auto" Minimum="50"
                        Maximum="100" Mode="Integer" Style="{StaticResource Borderless.White}" />
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                        <Setter TargetName="TextBox" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <!--both at the same time-->
    <!--<Grid Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="80" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        
        <mui:ModernProgressRing Grid.Row="1" IsActive="True" Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center" />

        <StackPanel Grid.Row="2" DataContext="{x:Static t:CarsManager.Instance}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="8"
                Visibility="{Binding IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
            <ProgressBar Maximum="{Binding WrappersList.Count}" Value="{Binding LoadedCount}" Margin="0 0 0 8" />
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Loaded {1} out of {0}">
                        <Binding Path="WrappersList.Count" />
                        <Binding Path="LoadedCount" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
    </Grid>-->

    <!--either ring or bar-->
    <mui:Cell Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
        <mui:ModernProgressRing IsActive="True" Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="{Binding IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Static t:CarsManager.Instance}}" />
        <StackPanel DataContext="{x:Static t:CarsManager.Instance}" VerticalAlignment="Center"
                Visibility="{Binding IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
            <ProgressBar Maximum="{Binding WrappersList.Count}" Value="{Binding LoadedCount}" Margin="8 0 8 8" Height="4" />
            <TextBlock TextAlignment="Center" Style="{StaticResource Small}">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Loaded {1} out of {0}">
                        <Binding Path="WrappersList.Count" />
                        <Binding Path="LoadedCount" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
    </mui:Cell>

    <DockPanel Grid.Column="1" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
        <Grid DockPanel.Dock="Top" Margin="0 0 0 8">
            <Rectangle Stroke="{DynamicResource SeparatorBackground}" StrokeThickness="1" StrokeDashArray="4 4" SnapsToDevicePixels="True" />
            <mui:BbCodeBlock TextWrapping="Wrap" Margin="8">WIP, [url="https://trello.com/c/zILPYnYX/59-fully-customizable-race"]more information[/url].</mui:BbCodeBlock>
        </Grid>

        <Grid x:Name="ButtonsPanel" DockPanel.Dock="Top" VerticalAlignment="Bottom" Margin="0 0 0 8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Style="{StaticResource LabelWithPadding}"
                    Text="{Binding Mode.CandidatesMode, Converter={x:Static uc:RaceGridEditorColumn.ModeToLabelConverter}}" />

            <mui:ModernToggleButton x:Name="AddCarButton" Grid.Column="1" IconData="{StaticResource AddIconData}"
                    ToolTip="{x:Static t:ToolsStrings.Drive_GridAdd_Tooltip}" HorizontalAlignment="Right" Margin="0 0 4 0"
                    Style="{StaticResource NonTransparent}"
                    IsHitTestVisible="{Binding ElementName=SelectCarPopup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}" />
            <mui:ModernToggleButton x:Name="DetailsButton" Grid.Column="2" IconData="{StaticResource ListGearIconData}" ToolTip="Detailed settings"
                    HorizontalAlignment="Right" Margin="0 0 0 0" Style="{StaticResource NonTransparent}"
                    IsHitTestVisible="{Binding ElementName=DetailsPopup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}" />

            <c:ModernPopup Grid.Column="0" Grid.ColumnSpan="2" x:Name="SelectCarPopup" Placement="Custom" Padding="8"
                    IsOpen="{Binding IsChecked, ElementName=AddCarButton, Mode=TwoWay}" StaysOpen="False" HorizontalAlignment="Right"
                    Opened="SelectCarPopup_OnOpened">
                <Grid Width="320" DataContext="{x:Reference This}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="480" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <DockPanel Grid.Row="0" Height="90" LastChildFill="False" Margin="0 0 0 8">
                        <mui:BetterImage Filename="{Binding SelectedCar.SelectedSkin.PreviewImage}" DockPanel.Dock="Left" Margin="0 0 8 0" Width="160"
                                Visibility="{Binding SelectedCar, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                            <mui:BetterImage.ToolTip>
                                <c:CarBlock Car="{Binding SelectedCar}" ShowSkinsAndPreview="False" Width="400" />
                            </mui:BetterImage.ToolTip>
                        </mui:BetterImage>

                        <TextBlock Text="{Binding SelectedCar.DisplayName}" DockPanel.Dock="Top" Margin="0 0 0 4" TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="{Binding SelectedCar.CarClass, StringFormat='{}Class: {0}'}" Style="{StaticResource Small}" DockPanel.Dock="Top"
                                Margin="0 0 0 4" />
                        <TextBlock Text="{Binding SelectedCar.SpecsInfoDisplay}" Style="{StaticResource Small}" DockPanel.Dock="Top" Margin="0 0 0 4"
                                TextWrapping="Wrap" />
                    </DockPanel>

                    <uc:SelectCar Grid.Row="1" SelectedCar="{Binding SelectedCar}" ItemChosen="SelectCar_OnItemChosen" />
                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                        <Button Command="{Binding AddOpponentCarCommand}" Content="Add" />
                        <Button Command="{Binding ClosePopupsCommand}" Content="Close" Margin="4 0 0 0" />
                    </StackPanel>
                </Grid>
            </c:ModernPopup>
            <c:ModernPopup Grid.Column="0" Grid.ColumnSpan="2" x:Name="DetailsPopup" Placement="Custom" Padding="8"
                    IsOpen="{Binding IsChecked, ElementName=DetailsButton, Mode=TwoWay}" StaysOpen="False" HorizontalAlignment="Right"
                    Opened="SelectCarPopup_OnOpened">
                <Grid Width="600" DataContext="{x:Reference This}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="400" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" ItemsSource="{Binding DataContext.NonfilteredList}" Style="{StaticResource DataGrid.Lite}"
                            mui:Draggable.Enabled="True" Drop="ItemsControl_OnDrop">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*" Header="Car" SortMemberPath="Car" CellTemplate="{StaticResource Detailed.CarDataTemplate}" />
                            <DataGridTemplateColumn Width="120" Header="Skin" SortMemberPath="CarSkin" CellTemplate="{StaticResource Detailed.SkinDataTemplate}" />
                            <DataGridTemplateColumn Width="100" Header="{x:Static g:AppStrings.TableHeader_Name}" SortMemberPath="Name"
                                    CellTemplate="{StaticResource Detailed.NameDataTemplate}" />
                            <DataGridTemplateColumn Width="120" Header="Nationality" SortMemberPath="Nationality"
                                    CellTemplate="{StaticResource Detailed.NationalityDataTemplate}" />
                            <DataGridTemplateColumn Width="60" Header="AI" SortMemberPath="AiLevel" CellTemplate="{StaticResource Detailed.AiDataTemplate}" />
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                        <c:UserPresetsControl Margin="0 0 4 0" UserPresetable="{Binding DataContext}" MinWidth="300" />
                        <Button Command="{Binding DataContext.ShareCommand}" Margin="0 0 4 0" ToolTip="{x:Static g:AppStrings.Common_Share_SettingsTooltip}"
                                Content="{x:Static g:AppStrings.Common_Share}" />
                        <Button Command="{Binding AddOpponentCarCommand}" Content="Add" />
                        <Button Command="{Binding ClosePopupsCommand}" Content="Close" Margin="4 0 0 0" />
                    </StackPanel>
                </Grid>
            </c:ModernPopup>
        </Grid>

        <DockPanel DockPanel.Dock="Top" Margin="0 0 0 8" Visibility="{Binding Mode.Filterable, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="{x:Static c:ControlsStrings.Common_FilterLabel}" Width="40" DockPanel.Dock="Left" />
            <mui:HistoricalTextBox Style="{StaticResource ComboBoxAsTextBlock}" mui:WatermarkService.Watermark="*"
                    Text="{Binding FilterValue, UpdateSourceTrigger=PropertyChanged}" SaveKey="RaceGridEditorColumn:FiltersHistory" />
        </DockPanel>

        <TextBlock Text="Matching candidates not found" Style="{StaticResource Small}" Foreground="{DynamicResource Error}"
                Visibility="{Binding FilteredView.Count, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=0}" Margin="0 4 0 0"
                FontWeight="Bold" IsHitTestVisible="False" />

        <ListBox x:Name="ListBox" ItemsSource="{Binding FilteredView}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True"
                VirtualizingPanel.ScrollUnit="Pixel" SelectionMode="Extended" ItemContainerStyle="{StaticResource ListBoxItem}" Drop="ItemsControl_OnDrop"
                Background="Transparent" mui:ContextMenuAdvancement.PropagateToChildren="True" mui:Draggable.Enabled="True">
            <ListBox.ContextMenu>
                <ContextMenu DataContext="{x:Reference This}">
                    <MenuItem Header="Save Race Grid As Preset" Command="{Binding SavePresetCommand}" />
                    <MenuItem Header="Share Race Grid" Command="{Binding SavePresetCommand}" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type c:RaceGridEntry}">
                                <DockPanel mui:ContextMenuAdvancement.PropagateToChildren="True">
                                    <DockPanel.InputBindings>
                                        <MouseBinding Command="{Binding DeleteCommand}" Gesture="MiddleClick" />
                                    </DockPanel.InputBindings>
                                    <DockPanel.ContextMenu>
                                        <mui:InheritingContextMenu DataContext="{x:Reference This}">
                                            <MenuItem Header="Delete" Command="{Binding DeleteSelectedCommand}" />
                                        </mui:InheritingContextMenu>
                                    </DockPanel.ContextMenu>
                                    <Button DockPanel.Dock="Right" Width="13" Height="13" Margin="4 0 4 0" VerticalAlignment="Center"
                                            RenderOptions.EdgeMode="Aliased" Padding="2" Command="{Binding DeleteCommand}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                            </Style>
                                        </Button.Style>
                                        <Path Data="M0,0 L7,7 M7,0 L0,7 Z" Width="8" Height="8"
                                                Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                                VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1" />
                                    </Button>
                                    <TextBox x:Name="PriorityTextBox" DockPanel.Dock="Right" Margin="4 0 0 0" Text="{Binding CandidatePriority}"
                                            ToolTip="Candidate priority" Style="{StaticResource TextBoxAsTextBlock.Small}" VerticalAlignment="Center" Width="20"
                                            Padding="0 -1 0 -1" mui:TextBoxAdvancement.SpecialMode="Positive" mui:FocusAdvancement.AdvancesByEnterKey="True" />
                                    <TextBlock Text="{Binding DisplayName}" />
                                </DockPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding CandidatePriority}" Value="1">
                                        <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger
                                            Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                            Value="True">
                                        <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.Mode.Id, ElementName=This}" Value="custom">
                                        <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode.CandidatesMode}" Value="False">
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type c:RaceGridEntry}">
                                        <DockPanel x:Name="Panel" mui:ContextMenuAdvancement.PropagateToChildren="True">
                                            <DockPanel.InputBindings>
                                                <MouseBinding Command="{Binding DeleteCommand}" Gesture="MiddleClick" />
                                            </DockPanel.InputBindings>
                                            <DockPanel.ContextMenu>
                                                <mui:InheritingContextMenu DataContext="{x:Reference This}">
                                                    <MenuItem Header="Clone" Command="{Binding CloneSelectedCommand}" />
                                                    <MenuItem Header="Delete" Command="{Binding DeleteSelectedCommand}" />
                                                </mui:InheritingContextMenu>
                                            </DockPanel.ContextMenu>
                                            <Button DockPanel.Dock="Right" Width="13" Height="13" Margin="4 0 4 0" VerticalAlignment="Center"
                                                    RenderOptions.EdgeMode="Aliased" Padding="2" Command="{Binding DeleteCommand}">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                    </Style>
                                                </Button.Style>
                                                <Path Data="M0,0 L7,7 M7,0 L0,7 Z" Width="8" Height="8"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                                        VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1" />
                                            </Button>
                                            <Path Data="{StaticResource AlertIconData}" Width="12" Height="12" DockPanel.Dock="Left"
                                                    Fill="{DynamicResource Error}" Stretch="Uniform" Visibility="Collapsed" x:Name="ErrorIcon" Margin="2 2 4 0"
                                                    VerticalAlignment="Center" />
                                            <TextBlock x:Name="Name" Text="{Binding DisplayName}" />
                                        </DockPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ExceedsLimit}" Value="True">
                                                <!--<Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemTextDisabled}" />-->
                                                <Setter Property="ToolTip" Value="There is no pit stop for this car" />
                                                <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                                                <Setter TargetName="Name" Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
        </ListBox>
    </DockPanel>
</mui:Cell>

<Grid x:Class="AcManager.UserControls.RaceGridEditorColumn" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:t="http://acstuff.ru/app/tools"
        xmlns:c="http://acstuff.ru/app/controls" xmlns:uc="clr-namespace:AcManager.UserControls" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300"
        d:DataContext="{d:DesignInstance c:RaceGridViewModel}" x:Name="This" mui:InputBindingBehavior.PropagateInputBindingsToWindow="True">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ComboBox.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
                <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ButtonWithComboBox.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/Converters.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
                <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/MenuAsComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="NonTransparent" TargetType="mui:ModernButton" BasedOn="{StaticResource {x:Type mui:ModernButton}}">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource FlatListBoxItem}">
                <EventSetter Event="PreviewMouseDoubleClick" Handler="Item_OnPreviewDoubleClick" />
                <Setter Property="mui:Draggable.Enabled" Value="True" />
                <Setter Property="AllowDrop" Value="True" />
            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <mui:ModernProgressRing Margin="8" IsActive="True" Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center"
            Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />

    <DockPanel Grid.Column="1" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
        <Grid DockPanel.Dock="Top" Margin="0 0 0 8">
            <Rectangle Stroke="{DynamicResource SeparatorBackground}" StrokeThickness="1" StrokeDashArray="4 4" SnapsToDevicePixels="True" />
            <mui:BbCodeBlock TextWrapping="Wrap" Margin="8">WIP, [url="https://trello.com/c/zILPYnYX/59-fully-customizable-race"]more information[/url].</mui:BbCodeBlock>
        </Grid>

        <TextBlock DockPanel.Dock="Top" Margin="0 0 0 8" Style="{StaticResource LabelWithPadding}"
                Text="{Binding Mode.CandidatesMode, Converter={x:Static uc:RaceGridEditorColumn.ModeToLabelConverter}}" />

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DockPanel Margin="0 0 0 8" HorizontalAlignment="Stretch"
                    Visibility="{Binding Mode.Filterable, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{x:Static c:ControlsStrings.Common_FilterLabel}" Width="40" DockPanel.Dock="Left" />
                <ComboBox Style="{StaticResource ComboBoxAsTextBlock}" mui:FocusAdvancement.AdvancesByEnterKey="True" mui:WatermarkService.Watermark="*"
                        Text="{Binding FilterValue, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" IsTextSearchEnabled="True" />
            </DockPanel>

            <ListBox x:Name="ListBox" ItemsSource="{Binding FilteredView}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True"
                    VirtualizingPanel.ScrollUnit="Pixel" Grid.Row="1" SelectionMode="Extended" ItemContainerStyle="{StaticResource ListBoxItem}"
                    Drop="ListBox_Drop" AllowDrop="True">
                <ListBox.Style>
                    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="{x:Type c:RaceGridEntry}">
                                    <DockPanel mui:ContextMenuAdvancement.PropagateToChildren="True">
                                        <DockPanel.ContextMenu>
                                            <ContextMenu DataContext="{Binding Source={x:Reference This}}">
                                                <MenuItem Header="Delete" Command="{Binding DeleteSelectedCommand}" />
                                                <Separator />
                                                <MenuItem Header="Save Preset" Command="{Binding SavePresetCommand}" />
                                            </ContextMenu>
                                        </DockPanel.ContextMenu>
                                        <Button DockPanel.Dock="Right" Width="13" Height="13" Margin="4 0 4 0" VerticalAlignment="Center"
                                                RenderOptions.EdgeMode="Aliased" Padding="2" Command="{Binding DeleteCommand}">
                                            <Button.Style>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                </Style>
                                            </Button.Style>
                                            <Path Data="M0,0 L7,7 M7,0 L0,7 Z" Width="8" Height="8"
                                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1" />
                                        </Button>
                                        <TextBox x:Name="PriorityTextBox" DockPanel.Dock="Right" Margin="4 0 0 0" Text="{Binding CandidatePriority}"
                                                ToolTip="Candidate priority" Style="{StaticResource TextBoxAsTextBlock.Small}" VerticalAlignment="Center"
                                                Width="20" Padding="0 -1 0 -1" mui:TextBoxAdvancement.SpecialMode="Positive"
                                                mui:FocusAdvancement.AdvancesByEnterKey="True" />
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </DockPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding CandidatePriority}" Value="1">
                                            <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger
                                                Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                Value="True">
                                            <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Mode.Id, ElementName=This}" Value="custom">
                                            <Setter TargetName="PriorityTextBox" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode.CandidatesMode}" Value="False">
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate DataType="{x:Type c:RaceGridEntry}">
                                            <DockPanel x:Name="Panel" mui:ContextMenuAdvancement.PropagateToChildren="True">
                                                <DockPanel.ContextMenu>
                                                    <ContextMenu DataContext="{Binding Source={x:Reference This}}">
                                                        <MenuItem Header="Clone" Command="{Binding CloneSelectedCommand}" />
                                                        <MenuItem Header="Delete" Command="{Binding DeleteSelectedCommand}" />
                                                        <Separator />
                                                        <MenuItem Header="Save Preset" Command="{Binding SavePresetCommand}" />
                                                    </ContextMenu>
                                                </DockPanel.ContextMenu>
                                                <Button DockPanel.Dock="Right" Width="13" Height="13" Margin="4 0 4 0" VerticalAlignment="Center"
                                                        RenderOptions.EdgeMode="Aliased" Padding="2" Command="{Binding DeleteCommand}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                        </Style>
                                                    </Button.Style>
                                                    <Path Data="M0,0 L7,7 M7,0 L0,7 Z" Width="8" Height="8"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                                            VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1" />
                                                </Button>
                                                <Path Data="{StaticResource AlertIconData}" Width="12" Height="12" DockPanel.Dock="Left"
                                                        Fill="{DynamicResource Error}" Stretch="Uniform" Visibility="Collapsed" x:Name="ErrorIcon"
                                                        Margin="2 2 4 0" VerticalAlignment="Center" />
                                                <TextBlock x:Name="Name" Text="{Binding DisplayName}" />
                                            </DockPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding ExceedsLimit}" Value="True">
                                                    <!--<Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemTextDisabled}" />-->
                                                    <Setter Property="ToolTip" Value="There is no pit stop for this car" />
                                                    <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SpecialEntry}" Value="True">
                                                    <Setter TargetName="Name" Property="Opacity" Value="0.5" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>

            <TextBlock Grid.Row="1" Text="Matching candidates not found" Style="{StaticResource Small}" Foreground="{DynamicResource Error}"
                    Visibility="{Binding FilteredView.Count, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=0}" Margin="0 4 0 0"
                    FontWeight="Bold" IsHitTestVisible="False" />

            <StackPanel x:Name="ButtonsPanel" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0 0 4 0">
                <mui:ModernToggleButton x:Name="AddCarButton" IconData="{StaticResource AddIconData}" ToolTip="{x:Static t:ToolsStrings.Drive_GridAdd_Tooltip}"
                        Style="{StaticResource NonTransparent}"
                        IsHitTestVisible="{Binding ElementName=SelectCarPopup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}" />
                <!--<mui:ModernButton IconData="{StaticResource ListGearIconData}" Command="{Binding SetupCommand, ElementName=This}" ToolTip="Detailed setup"
                        Style="{StaticResource NonTransparent}" />-->
            </StackPanel>

            <c:ModernPopup Grid.Row="1" x:Name="SelectCarPopup" PlacementTarget="{Binding ElementName=ButtonsPanel}" Placement="Left" Padding="8"
                    IsOpen="{Binding IsChecked, ElementName=AddCarButton, Mode=TwoWay}" StaysOpen="False">
                <Grid Width="320" DataContext="{x:Reference This}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="480" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <uc:SelectCar SelectedCar="{Binding SelectedCar}" />
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding AddOpponentCarCommand}" Content="Add" Margin="0 0 4 0" />
                        <Button Command="{Binding CloseAddingPopupCommand}" Content="Close" />
                    </StackPanel>
                </Grid>
            </c:ModernPopup>
        </Grid>
    </DockPanel>
</Grid>

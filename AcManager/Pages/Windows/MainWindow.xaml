<mui:ModernWindow x:Class="AcManager.Pages.Windows.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:windows="clr-namespace:AcManager.Pages.Windows" xmlns:g="clr-namespace:AcManager" xmlns:t="http://acstuff.ru/app/tools"
    xmlns:c="http://acstuff.ru/app/controls" xmlns:system="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d" Title="{x:Static g:AppStrings.Main_Title}"
    IsTitleVisible="False" MinWidth="800" MinHeight="640" Width="960" Height="800" AllowsTransparency="False" FocusVisualStyle="{x:Null}" AllowDrop="True"
    Drop="OnDrop" DragEnter="OnDragEnter" DefaultContentSource="/Pages/Drive/QuickDrive.xaml" Loaded="OnLoaded" Unloaded="OnUnloaded" Closing="OnClosing"
    Closed="OnClosed" MouseRightButtonUp="OnMouseRightButtonDown" PreviewMouseRightButtonUp="OnPreviewMouseRightButtonUp"
    PreviewMouseRightButtonDown="OnPreviewMouseRightButtonDown" KeyDown="OnKeyDown" FrameNavigating="OnFrameNavigating"
    mui:ModernMenu.Initialize="OnMainMenuInitialize" d:DataContext="{d:DesignInstance windows:MainWindow+ViewModel}" SaveKey="MainWindow"
    LocationAndSizeKey="MainWindow_LS" x:Name="Window">
  <mui:ModernWindow.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/FancyBackgroundBrush.xaml" />
        <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Themes/ModernWindow.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <mui:BooleanLazySwitch x:Key="SteamOverlayFix" TrueResourceKey="Obj" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}">
        <mui:BooleanLazySwitch.Resources>
          <Border x:Key="Obj" Background="#01000000" IsHitTestVisible="False">
            <Border.Style>
              <Style>
                <Style.Triggers>
                  <EventTrigger RoutedEvent="Border.Loaded">
                    <BeginStoryboard>
                      <Storyboard Timeline.DesiredFrameRate="30">
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" Duration="0:0:1" RepeatBehavior="Forever" From="0" To="0.1" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
          </Border>
        </mui:BooleanLazySwitch.Resources>
      </mui:BooleanLazySwitch>

      <system:Boolean x:Key="SystemButtonActive">True</system:Boolean>

      <Style x:Key="SystemButtonGo" TargetType="ButtonBase" BasedOn="{StaticResource SystemButton}">
        <Style.Triggers>
          <Trigger Property="Tag" Value="{StaticResource SystemButtonActive}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                  <mui:Cell>
                    <Canvas Width="10" Height="6" ClipToBounds="True" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Margin="{TemplateBinding Padding}">
                      <Line X1="-0.01" X2="15.01" Y1="-5.71" Y2="12.01"
                          StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}"
                          Stroke="{DynamicResource GoButtonText}" RenderOptions.EdgeMode="Unspecified" />
                      <Line X1="10.01" X2="-5.01" Y1="-5.71" Y2="12.01"
                          StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}"
                          Stroke="{DynamicResource GoButtonText}" RenderOptions.EdgeMode="Unspecified" />
                    </Canvas>
                    <mui:Cell x:Name="Chrome" Background="{DynamicResource Go}"
                        Opacity="{Binding Background.Opacity, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
                      <Border Opacity="{Binding BorderBrush.Opacity, RelativeSource={RelativeSource TemplatedParent}}" Background="Black">
                        <Border Background="{DynamicResource Go}" Opacity="0.7" />
                      </Border>
                      <Canvas Width="10" Height="6" ClipToBounds="True" VerticalAlignment="Center" HorizontalAlignment="Center"
                          Margin="{TemplateBinding Padding}">
                        <Line X1="-0.01" X2="15.01" Y1="-5.71" Y2="12.01"
                            StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}"
                            Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource TemplatedParent}}" RenderOptions.EdgeMode="Unspecified" />
                        <Line X1="10.01" X2="-5.01" Y1="-5.71" Y2="12.01"
                            StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}"
                            Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource TemplatedParent}}" RenderOptions.EdgeMode="Unspecified" />
                      </Canvas>
                    </mui:Cell>
                  </mui:Cell>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </mui:ModernWindow.Resources>

  <mui:ModernWindow.CloseButton>
    <mui:ReferenceSwitch Value="{Binding AppUpdater.UpdateIsReady, Mode=OneWay}" Null="{StaticResource WindowCloseButtonDefault}">
      <mui:ReferenceSwitch.NonNull>
        <Button Command="{Binding AppUpdater.FinishUpdateCommand}" Style="{StaticResource SystemButtonGo}" Tag="{StaticResource SystemButtonActive}"
            Visibility="{Binding AppUpdater.UpdateIsReady, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <Button.ToolTip>
            <ToolTip>
              <mui:BbCodeBlock BbCode="{Binding AppUpdater.UpdateIsReady, StringFormat={x:Static mui:UiStrings.UpdateAvailable}}" MaxWidth="480"
                  TextWrapping="Wrap" />
            </ToolTip>
          </Button.ToolTip>
          <Button.ContextMenu>
            <ContextMenu>
              <MenuItem Header="View changelog" Command="{Binding ViewChangelogCommand}" />
              <MenuItem Header="Update manually" Command="{Binding AppUpdater.UpdateManuallyCommand}" />
              <Separator />
              <MenuItem Header="Ignore this update" Command="{Binding AppUpdater.IgnoreUpdateCommand}" />
              <MenuItem Header="Disable auto-updates" Command="{Binding AppUpdater.DisableAutoUpdatesCommand}" />
            </ContextMenu>
          </Button.ContextMenu>
        </Button>
      </mui:ReferenceSwitch.NonNull>
    </mui:ReferenceSwitch>
  </mui:ModernWindow.CloseButton>

  <mui:ModernWindow.TitleButtons>
    <mui:BooleanSwitch Width="45"
        Value="{Binding DownloadList.Count, Source={x:Static t:ContentInstallationManager.Instance}, Converter={StaticResource MoreConverter}}">
      <Button Command="{Binding ShowAdditionalContentDialogCommand}" Style="{StaticResource SystemButtonGo}"
          Tag="{Binding HasUnfinishedItems, Source={x:Static t:ContentInstallationManager.Instance}}" Width="45">
        <Button.ToolTip>
          <ToolTip Content="{Binding DownloadList.Count, Source={x:Static t:ContentInstallationManager.Instance}}"
              ContentStringFormat="{}{0} in installing queue" />
        </Button.ToolTip>
        <mui:BooleanSwitch Value="{Binding HasLoadingItems, Source={x:Static t:ContentInstallationManager.Instance}}">
          <mui:BooleanSwitch.True>
            <Canvas Width="9" Height="9" ClipToBounds="True">
              <Canvas Width="9" Height="9">
                <FrameworkElement.RenderTransform>
                  <TranslateTransform />
                </FrameworkElement.RenderTransform>
                <FrameworkElement.Triggers>
                  <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                      <Storyboard RepeatBehavior="Forever" TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.Y)" SpeedRatio="2">
                        <DoubleAnimationUsingKeyFrames>
                          <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                          <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="8" />
                          <DiscreteDoubleKeyFrame KeyTime="0:0:1.001" Value="-8" />
                          <LinearDoubleKeyFrame KeyTime="0:0:2.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </FrameworkElement.Triggers>
                <Line X1="4.51" X2="4.51" Y1="0" Y2="8.5" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                    RenderOptions.EdgeMode="Aliased"
                    StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
                <Path Data="M-0.01,3.99 L4.51,7.49 M4.49,7.49 L9.01,3.99" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                    StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
              </Canvas>
              <Line X1="-1" X2="10" Y1="8.75" Y2="8.75" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
            </Canvas>
          </mui:BooleanSwitch.True>
          <mui:BooleanSwitch.False>
            <Canvas Width="9" Height="9" ClipToBounds="True">
              <Line X1="-1" X2="10" Y1="8.75" Y2="8.75" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
              <Line X1="4.51" X2="4.51" Y1="0" Y2="8.5" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
              <Path Data="M-0.01,3.99 L4.51,7.49 M4.49,7.49 L9.01,3.99" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:ModernWindow}}" />
            </Canvas>
          </mui:BooleanSwitch.False>
        </mui:BooleanSwitch>
      </Button>
    </mui:BooleanSwitch>
  </mui:ModernWindow.TitleButtons>

  <mui:ModernWindow.MenuLinkGroups>
    <!-- ReSharper disable Xaml.PathError -->

    <!-- Drive -->
    <mui:LinkGroup GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Single}">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_QuickDrive}" Source="/Pages/Drive/QuickDrive.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Career}" Source="/Pages/Drive/KunosCareer.xaml" />
        <mui:Link DisplayName="Championships" Source="/Pages/Drive/UserChampionships.xaml" IsEnabled="False" />
        <!-- <mui:Link DisplayName="{x:Static g:AppStrings.Main_Challenges}" Source="/Pages/Drive/SpecialEvents.xaml" IsEnabled="False" /> -->
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Challenges}" Source="/Pages/Drive/SpecialEvents.xaml" IsEnabled="False"
        FilterHint="{x:Static c:FilterHints.SpecialEvents}">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Hotlaps" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:hotlap&amp;Special=1" />
        <mui:Link DisplayName="Races" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:*race&amp;Special=1" />
        <mui:Link DisplayName="Drift" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:drift&amp;Special=1" />
        <mui:Link DisplayName="Drag" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:drag&amp;Special=1" />
        <mui:Link DisplayName="Time Attack" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:time attack&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>
    <mui:LinkGroup x:Name="LiveGroup" GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Live}">
      <mui:LinkGroup.Links>
        <mui:Link x:Name="RsrLink" DisplayName="{x:Static g:AppStrings.Main_Rsr}" Source="/Pages/Drive/Rsr.xaml" />
        <mui:Link x:Name="SrsLink" DisplayName="{x:Static g:AppStrings.Main_Srs}" Source="/Pages/Drive/Srs.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable x:Name="OnlineGroup" GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Online}" AddAllLink="False"
        Source="/Pages/Drive/Online.xaml" FilterHint="{x:Static c:FilterHints.ServerEntries}">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Kunos" Source="/Pages/Drive/Online.xaml?Filter=@kunos&amp;Special=1" />
        <mui:Link x:Name="MinoratingLink" DisplayName="Minorating" Source="/Pages/Drive/Online.xaml?Filter=@minorating&amp;Special=1" />
        <mui:Link DisplayName="LAN" Source="/Pages/Drive/Online.xaml?Filter=@lan&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>

    <!-- Lap times -->
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="{x:Static g:AppStrings.Main_RecentLapTimes}" Source="/Pages/Miscellaneous/LapTimes_Recent.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="Table" Source="/Pages/Miscellaneous/LapTimes_Table.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable x:Name="LapTimesGrid" GroupKey="lapTimes" DisplayName="{x:Static g:AppStrings.Main_LapTimesGrid}"
        Source="/Pages/Miscellaneous/WorkInProgress.xaml?lapTimesGrid" FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="Sources" Source="/Pages/Miscellaneous/LapTimes_Sources.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />

    <!-- Stats -->
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="Results" Source="/Pages/Miscellaneous/RaceResults.xaml" />
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="{x:Static g:AppStrings.Main_Stats}" Source="/Pages/Miscellaneous/PlayerStats.xaml">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Kunos cars only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k+)&amp;Special=1" />
        <mui:Link DisplayName="Kunos cars &amp; tracks only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k+)%26track(k+)&amp;Special=1" />
        <mui:Link DisplayName="Mods only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k-)%26track(k-)&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="Most used" Source="/Pages/Miscellaneous/MostUsed.xaml" />

    <!-- Media -->
    <mui:LinkGroupFilterable GroupKey="media" DisplayName="{x:Static g:AppStrings.Main_Screenshots}" Source="/Pages/Lists/ScreenshotsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Replays}" />
    <mui:LinkGroupFilterable GroupKey="media" DisplayName="{x:Static g:AppStrings.Main_Replays}" Source="/Pages/Lists/ReplaysListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Files}" />

    <!-- Content -->
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Cars}" Source="/Pages/Lists/CarsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Cars}" />
    <mui:LinkGroupFilterable GroupKey="content" IsEnabled="False" DisplayName="{x:Static g:AppStrings.Main_Tracks}" Source="/Pages/Lists/TracksListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Tracks}" />
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Showrooms}" Source="/Pages/Lists/ShowroomsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Showrooms}" />
    <mui:LinkGroup GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Miscellaneous}">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Apps}" Source="/Pages/Lists/PythonAppsListPage.xaml" />
        <mui:Link DisplayName="Driver models" Source="/Pages/Lists/DriverModelsListPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Fonts}" Source="/Pages/Lists/FontsListPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_PpFilters}" Source="/Pages/Lists/PpFiltersListPage.xaml" />
        <mui:Link DisplayName="User championships" Source="/Pages/Lists/UserChampionshipsListPage.xaml" IsEnabled="False" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Weather}" Source="/Pages/Lists/WeatherListPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable GroupKey="content" IsEnabled="False" DisplayName="Mods" Source="/Pages/Lists/GenericModsListPage.xaml" />
    <mui:LinkGroup GroupKey="content" DisplayName="Tools">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static mui:UiStrings.FiltersLinkAll}" Source="/Pages/Lists/ToolsListPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>

    <!-- Server Source="/Pages/Lists/ServerPresetsListPage.xaml" -->
    <mui:LinkGroupFilterable GroupKey="server" DisplayName="{x:Static g:AppStrings.Main_ServerPresets}" Source="/Pages/Lists/ServerPresetsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.ServerPresets}" />
    <mui:LinkGroupFilterable GroupKey="server" DisplayName="{x:Static g:AppStrings.Main_ServerRunning}"
        Source="/Pages/Miscellaneous/WorkInProgress.xaml?server-running" />

    <!-- Settings -->
    <mui:LinkGroupFilterable GroupKey="settings" DisplayName="{x:Static g:AppStrings.Main_Settings}" AddAllLink="False" Source="/Pages/Settings/Search.xaml">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ContentManager}" Source="/Pages/Settings/SettingsPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_AssettoCorsa}" Source="/Pages/AcSettings/AcSettingsPage.xaml" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>

    <!-- About -->
    <mui:LinkGroup DisplayName="{x:Static g:AppStrings.Main_About}" GroupKey="about">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_About}" Source="/Pages/About/AboutPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ReleaseNotes}" Source="/Pages/About/ReleaseNotesPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ImportantTips}" Source="/Pages/About/ImportantTipsPage.xaml" />
        <mui:Link DisplayName="Everything about filtering" Source="/Pages/About/FiltersPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>

    <!-- ReSharper restore Xaml.PathError -->
  </mui:ModernWindow.MenuLinkGroups>

  <mui:ModernWindow.TitleLinks>
    <mui:TitleLink GroupKey="drive" Source="/Pages/Drive/QuickDrive.xaml">
      <TextBlock Text="{Binding Source={x:Static g:AppStrings.Main_Drive}, Converter={StaticResource ToUpperConverter}}" Drop="OnDriveTitleLinkDrop"
          AllowDrop="True" mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.DragForContentSection}}"
          mui:FancyHintsService.HorizontalContentAlignment="Center" />
    </mui:TitleLink>
    <mui:TitleLink Content="Lap times" GroupKey="lapTimes" Source="/Pages/Miscellaneous/LapTimes_Recent.xaml" />
    <mui:TitleLink Content="Results" GroupKey="stats" Source="/Pages/Miscellaneous/PlayerStats.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_Media}" GroupKey="media" Source="/Pages/Lists/ReplaysListPage.xaml" />
    <mui:TitleLink GroupKey="content" Source="/Pages/Lists/CarsListPage.xaml">
      <TextBlock Text="{Binding Source={x:Static g:AppStrings.Main_Content}, Converter={StaticResource ToUpperConverter}}" Drop="OnContentTitleLinkDrop"
          AllowDrop="True" />
    </mui:TitleLink>
    <mui:TitleLink x:Name="ServerGroup" DisplayName="{x:Static g:AppStrings.Main_Server}" GroupKey="server" IsEnabled="False"
        Source="/Pages/Lists/ServerPresetsListPage.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_Settings}" GroupKey="settings" Source="/Pages/Settings/SettingsPage.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_About}" GroupKey="about" Source="/Pages/About/AboutPage.xaml" />
    <mui:TitleLink x:Name="OriginalLauncher" Content="original launcher" Source="{x:Static windows:MainWindow.OriginalLauncherUrl}" />
    <mui:TitleLink Content="full version" Source="{x:Static windows:MainWindow.EnterKeyUrl}" IsAccented="True" />
  </mui:ModernWindow.TitleLinks>

  <mui:Cell x:Name="OverlayContentCell" ClipToBounds="True">
    <Border x:Name="Popup" HorizontalAlignment="Left" Width="330">
      <Border.Style>
        <Style TargetType="Border">
          <Setter Property="Focusable" Value="True" />
          <Setter Property="FocusVisualStyle" Value="{x:Null}" />
          <Setter Property="RenderTransform">
            <Setter.Value>
              <TranslateTransform X="-340" />
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <EventTrigger RoutedEvent="GotFocus">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd" TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <DoubleAnimation To="0" Duration="0:0:0.24" EasingFunction="{StaticResource DecelerationEase}" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="LostFocus">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="Stop" TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <DoubleAnimation To="-340" Duration="0:0:0.24" EasingFunction="{StaticResource AccelerationEase}" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
          </Style.Triggers>
        </Style>
      </Border.Style>
    </Border>
    <Popup Placement="Absolute" HorizontalOffset="{Binding ActualRight, ElementName=Window, Converter={StaticResource SumConverter}, ConverterParameter=-140}"
        VerticalOffset="{Binding ActualBottom, ElementName=Window, Converter={StaticResource SumConverter}, ConverterParameter=-100}" Height="80" Width="120"
        x:Name="QuickSwitchesNotification" StaysOpen="True" PopupAnimation="Fade" AllowsTransparency="True">
      <Border Background="{DynamicResource WindowBackground}" Padding="12" CornerRadius="0" BorderBrush="{DynamicResource WindowBorderActive}"
          BorderThickness="1">
        <DockPanel>
          <TextBlock x:Name="QuickSwitchesNotificationText" DockPanel.Dock="Bottom" Style="{StaticResource Label}" Margin="0 4 0 0"
              HorizontalAlignment="Center" />
          <Path x:Name="QuickSwitchesNotificationIcon" Width="24" Height="24" Fill="{Binding Foreground, ElementName=QuickSwitchesNotificationText}"
              Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" />
        </DockPanel>
      </Border>
    </Popup>
  </mui:Cell>
</mui:ModernWindow>
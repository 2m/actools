<UserControl x:Class="AcManager.Pages.AcSettings.AcSettingsControls_Wheel_Buttons" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
        xmlns:helpers="clr-namespace:AcManager.Tools.Helpers;assembly=AcManager.Tools"
        xmlns:acSettingsControls="clr-namespace:AcManager.Tools.Helpers.AcSettingsControls;assembly=AcManager.Tools"
        xmlns:watermark="clr-namespace:FirstFloor.ModernUI.Windows.Controls.Watermark;assembly=FirstFloor.ModernUI" mc:Ignorable="d" d:DesignHeight="300"
        d:DesignWidth="300">
    <UserControl.Resources>
        <DataTemplate x:Key="ButtonEntryTemplate" DataType="{x:Type acSettingsControls:WheelButtonEntry}">
            <Grid Margin="0 0 0 4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding DisplayName, StringFormat='{}{0}:'}" Style="{StaticResource Label}" Grid.Column="0" Margin="20 0 0 0" />

                <Button Grid.Column="1" ToolTip="Steering wheel button" Padding="8 4" HorizontalContentAlignment="Stretch"
                        Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WaitingFor}" Value="{x:Static acSettingsControls:WaitingFor.Wheel}">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <Grid HorizontalAlignment="Stretch">
                        <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                            <TextBlock Text="{Binding SelectedButton.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}"
                                    HorizontalAlignment="Left" />
                            <TextBlock Text="{Binding SelectedButton.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left" Margin="0 8 0 0" />
                            <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" FontWeight="Normal"
                                    Visibility="{Binding SelectedButton, Converter={StaticResource NullToVisibilityConverter}}" />

                            <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                    Visibility="{Binding SelectedButton.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                        </Grid>
                        
                        <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Button>

                <Button Grid.Column="2" ToolTip="Keyboard button" Margin="4 0 0 0" Padding="8 4" HorizontalContentAlignment="Stretch"
                        IsEnabled="{Binding CombineWithKeyboardInput, Source={x:Static helpers:AcSettingsHolder.Controls}}"
                        Command="{Binding ToggleWaitingKeyboardCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WaitingFor}" Value="{x:Static acSettingsControls:WaitingFor.Keyboard}">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <Grid HorizontalAlignment="Stretch">
                        <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                            <TextBlock Text="{Binding SelectedKeyboardButton.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" />
                            <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" FontWeight="Normal"
                                    Visibility="{Binding SelectedKeyboardButton, Converter={StaticResource NullToVisibilityConverter}}" />
                            <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                    Visibility="{Binding SelectedKeyboardButton.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                        </Grid>
                        <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Button>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <ScrollViewer DataContext="{Binding Source={x:Static helpers:AcSettingsHolder.Controls}}">
        <StackPanel>
            <CheckBox IsChecked="{Binding CombineWithKeyboardInput}" Margin="0 0 0 20">
                <Label>Combine with _keyboard</Label>
            </CheckBox>

            <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4">Shifters:</TextBlock>
            <ItemsControl ItemsSource="{Binding WheelButtonGearsEntries}" Margin="0 0 20 4" ItemTemplate="{StaticResource ButtonEntryTemplate}" />

            <CheckBox IsChecked="{Binding WheelUseHShifter}" Margin="0 0 0 20">
                <Label>Use _H-shifter</Label>
            </CheckBox>

            <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4">Miscellaneous:</TextBlock>
            <ItemsControl ItemsSource="{Binding WheelButtonCarEntries}" Margin="0 0 20 20" ItemTemplate="{StaticResource ButtonEntryTemplate}" />

            <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4">View:</TextBlock>
            <ItemsControl ItemsSource="{Binding WheelButtonViewEntries}" Margin="0 0 20 20" ItemTemplate="{StaticResource ButtonEntryTemplate}" />

            <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4">Gestures:</TextBlock>
            <ItemsControl ItemsSource="{Binding WheelButtonGesturesEntries}" Margin="0 0 20 20" ItemTemplate="{StaticResource ButtonEntryTemplate}" />
        </StackPanel>
    </ScrollViewer>
</UserControl>

<UserControl x:Class="AcManager.Pages.AcSettings.AcSettingsControls_Wheel_Main" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
        xmlns:helpers="clr-namespace:AcManager.Tools.Helpers;assembly=AcManager.Tools"
        xmlns:acSettingsControls="clr-namespace:AcManager.Tools.Helpers.AcSettingsControls;assembly=AcManager.Tools"
        xmlns:watermark="clr-namespace:FirstFloor.ModernUI.Windows.Controls.Watermark;assembly=FirstFloor.ModernUI"
        xmlns:controls="clr-namespace:AcManager.Controls;assembly=AcManager.Controls" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300"
        Loaded="AcSettingsControls_Wheel_Main_OnLoaded" Unloaded="AcSettingsControls_Wheel_Main_OnUnloaded"
        PreviewKeyDown="AcSettingsControls_Wheel_Main_OnPreviewKeyDown">
    <UserControl.Resources>
        <DataTemplate x:Key="AxisEntryTemplate" DataType="{x:Type acSettingsControls:WheelAxleEntry}">
            <DockPanel Margin="0 0 0 20">
                <DockPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear"
                                IsEnabled="{Binding SelectedAxle, Converter={StaticResource NullToBooleanConverter}, ConverterParameter=inverse}" />
                    </ContextMenu>
                </DockPanel.ContextMenu>

                <Grid DockPanel.Dock="Bottom" Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Rectangle Fill="{DynamicResource ButtonBackground}" />
                    <Rectangle Fill="{DynamicResource Accent}" Height="4" Margin="2"
                            Visibility="{Binding SelectedAxle, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                        <Rectangle.RenderTransform>
                            <ScaleTransform ScaleY="1" ScaleX="{Binding Value}" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </Grid>

                <Grid DockPanel.Dock="Bottom" Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
                    <Rectangle Margin="2 0 10 0" Name="Helper" />
                    <Rectangle Fill="{DynamicResource ButtonBackground}" />
                    <Rectangle Fill="{DynamicResource Accent}" Height="4" Width="8" Margin="2" HorizontalAlignment="Left"
                            Visibility="{Binding SelectedAxle, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform Y="0">
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource MultiMultiplyConverter}">
                                        <Binding Path="Value" />
                                        <Binding ElementName="Helper" Path="ActualWidth" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </Grid>

                <DockPanel Margin="0 0 0 4" VerticalAlignment="Top" Width="200" DockPanel.Dock="Left">
                    <TextBlock Text="{Binding DisplayName}" Style="{StaticResource Heading1}" Margin="0 -8 0 2" DockPanel.Dock="Top" />
                    <Button Padding="8 4" HorizontalContentAlignment="Left"
                            Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Waiting}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Grid HorizontalAlignment="Left">
                            <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                                <TextBlock Text="{Binding SelectedAxle.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}"
                                        HorizontalAlignment="Left" />
                                <TextBlock Text="{Binding SelectedAxle.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left"
                                        Margin="0 8 0 0" Name="ProviderName" />
                                <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left"
                                        VerticalAlignment="Center" FontWeight="Normal"
                                        Visibility="{Binding SelectedAxle, Converter={StaticResource NullToVisibilityConverter}}" />
                            </Grid>
                            <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                    FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Button>
                </DockPanel>

                <StackPanel Margin="16 4 0 0"
                        Visibility="{Binding SelectedAxle, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                    <CheckBox IsChecked="{Binding Invert}" Margin="0 0 0 4">
                        <Label>Invert</Label>
                    </CheckBox>

                    <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                            Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding DegressOfRotation}" Mode="Positive" Postfix="°" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">Degress</controls:ValueLabel>
                        <Slider Minimum="40" Maximum="1180" Value="{Binding DegressOfRotation}" TickFrequency="20" TickPlacement="None"
                                IsSnapToTickEnabled="True" />
                    </DockPanel>

                    <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding RangeFrom}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">From</controls:ValueLabel>
                        <Slider Minimum="0" Maximum="100" Value="{Binding RangeFrom}" />
                    </DockPanel>

                    <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding RangeTo}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">To</controls:ValueLabel>
                        <Slider Minimum="0" Maximum="100" Value="{Binding RangeTo}" />
                    </DockPanel>

                    <DockPanel Visibility="{Binding GammaMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding Gamma, StringFormat='{}{0:F2}'}" Mode="Number" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">Gamma</controls:ValueLabel>
                        <Slider Minimum="1" Maximum="5" Value="{Binding Gamma}" />
                    </DockPanel>

                    <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                            Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding Filter}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">Filter</controls:ValueLabel>
                        <Slider Minimum="0" Maximum="100" Value="{Binding Filter}" />
                    </DockPanel>

                    <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                            Margin="0 0 0 4">
                        <controls:ValueLabel Value="{Binding SpeedSensitivity}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                                DockPanel.Dock="Left">Speed sensitivity</controls:ValueLabel>
                        <Slider Minimum="0" Maximum="100" Value="{Binding SpeedSensitivity}" />
                    </DockPanel>
                </StackPanel>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <ScrollViewer DataContext="{Binding Source={x:Static helpers:AcSettingsHolder.Controls}}">
        <ItemsControl ItemsSource="{Binding WheelAxleEntries}" Margin="0 0 20 20" ItemTemplate="{StaticResource AxisEntryTemplate}" />
    </ScrollViewer>
</UserControl>

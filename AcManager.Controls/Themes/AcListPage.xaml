<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ac="clr-namespace:AcManager.Controls" xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Themes/ModernButton.xaml" />
    <ResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
    <ResourceDictionary Source="/AcManager.Controls;component/Assets/AcItemWrapperSpecific.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="GroupBoxExpander" TargetType="Expander">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource WindowText}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <StackPanel SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_Header" Margin="8 20 8 4">
              <ToggleButton DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource ExpandCollapseToggleStyle}"
                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <ContentPresenter x:Name="PART_ExpandSite" Visibility="Collapsed" Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="PART_ExpandSite" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}" Value="(DependencyProperty.UnsetValue)">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ac:AcListPage">
    <Style.Resources>
      <Style x:Key="AcListPageCheckBoxItem" TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                <DockPanel>
                  <TextBlock Text="{Binding (ac:AcListPage.CheckBoxModeActive), RelativeSource={RelativeSource Self}}" />
                  <TextBlock Text="{Binding (ac:AcListPage.CheckBoxModeActive), RelativeSource={RelativeSource AncestorType={x:Type ac:AcListPage}}}" />
                  <CheckBox x:Name="PART_CheckBox"
                      IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                      IsHitTestVisible="False" DockPanel.Dock="Left" Margin="10 0 -10 0" Width="20">
                    <CheckBox.Style>
                      <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Style.Triggers>
                          <DataTrigger
                              Binding="{Binding (ac:AcListPage.CheckBoxModeActive), RelativeSource={RelativeSource Self}}"
                              Value="True">
                            <!--<DataTrigger.EnterActions>
                              <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd" TargetProperty="Width">
                                  <DoubleAnimation To="22" Duration="0:0:0.3" />
                                </Storyboard>
                              </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                              <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd" TargetProperty="Width">
                                  <DoubleAnimation To="0" Duration="0:0:0.3" />
                                </Storyboard>
                              </BeginStoryboard>
                            </DataTrigger.ExitActions>-->
                            <DataTrigger.EnterActions>
                              <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd" TargetProperty="Background">
                                  <ColorAnimation To="Red" Duration="0:0:0.3" />
                                </Storyboard>
                              </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                              <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd" TargetProperty="Background">
                                  <ColorAnimation To="Yellow" Duration="0:0:0.3" />
                                </Storyboard>
                              </BeginStoryboard>
                            </DataTrigger.ExitActions>
                          </DataTrigger>
                          <!--<EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                              <Storyboard FillBehavior="HoldEnd" TargetProperty="Width">
                                <DoubleAnimation To="22" Duration="0:0:0.3" />
                              </Storyboard>
                            </BeginStoryboard>
                          </EventTrigger>-->
                        </Style.Triggers>
                      </Style>
                    </CheckBox.Style>
                  </CheckBox>
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
            <Setter Property="Background" Value="{DynamicResource ItemBackgroundHover}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
            <Setter Property="FontWeight" Value="Normal" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
            <Setter Property="Background" Value="{DynamicResource ItemBackgroundHover}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
            <Setter Property="Background" Value="{DynamicResource ItemBackgroundSelected}" />
            <Setter Property="FontWeight" Value="Bold" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>

    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="mui:InputBindingBehavior.PropagateInputBindingsToWindow" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ac:AcListPage">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="50" MaxWidth="400" />
              <ColumnDefinition Width="9" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <ListBox x:Name="ItemsList" IsSynchronizedWithCurrentItem="True" ItemsSource="{TemplateBinding ItemsSource}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True" VirtualizingPanel.ScrollUnit="Pixel"
                  ItemTemplate="{StaticResource AcItemWrapperSpecific.ListItemTemplate}" mui:SaveScroll.Key="{TemplateBinding SaveScrollKey}">
                <ListBox.ItemsPanel>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" CacheLength="1,1" CacheLengthUnit="Page" ScrollUnit="Pixel" VirtualizationMode="Recycling"
                        IsVirtualizing="True" />
                  </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
              </ListBox>

              <DockPanel Grid.Row="1">
                <mui:ModernButton x:Name="AddCarButton" DockPanel.Dock="Right" IconData="{StaticResource AddIconData}"
                    ToolTip="Create a new one (Ctrl+Shift+N)" Margin="4 0 0 0" Style="{StaticResource NonTransparent}"
                    Visibility="{Binding AddNewCommand.IsAbleToExecute, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />
                <TextBlock Text="{Binding Status}" Margin="{StaticResource StatusMargin}" Foreground="{DynamicResource WindowTextReadOnly}" />
              </DockPanel>
            </Grid>

            <!-- seperator -->
            <mui:ModernTabSplitter Grid.Column="1" SaveKey="AcListPage" />
            <mui:ModernFrame x:Name="PART_Frame" Grid.Column="2" Source="{TemplateBinding SelectedSource}" Margin="16 0 16 0" TransitionName="Normal"
                TopSource="{x:Null}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsGroupingEnabled" Value="True">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ac:AcListPage">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="50" MaxWidth="400" />
                  <ColumnDefinition Width="9" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>

                  <ListBox x:Name="ItemsList" IsSynchronizedWithCurrentItem="True" ItemsSource="{TemplateBinding ItemsSource}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False"
                      ItemTemplate="{StaticResource AcItemWrapperSpecific.ListItemTemplate}" mui:SaveScroll.Key="{TemplateBinding SaveScrollKey}">
                    <ListBox.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" />
                      </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.GroupStyle>
                      <GroupStyle>
                        <GroupStyle.ContainerStyle>
                          <Style TargetType="GroupItem">
                            <Setter Property="Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="GroupItem">
                                  <mui:RememberingExpander Key="{Binding Name, StringFormat='{}.content_category_{0}', Mode=OneTime}" Margin="0"
                                      Style="{StaticResource GroupBoxExpander}">
                                    <Expander.Header>
                                      <TextBlock Style="{StaticResource Label}">
                                        <Run Text="{Binding Name, Mode=OneWay}" />
                                        <Run Text="{Binding ItemCount, Mode=OneWay, StringFormat='{}({0})'}" />
                                      </TextBlock>
                                    </Expander.Header>
                                    <ItemsPresenter />
                                  </mui:RememberingExpander>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Name}" Value="">
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="GroupItem">
                                      <ItemsPresenter />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </GroupStyle.ContainerStyle>
                      </GroupStyle>
                    </ListBox.GroupStyle>
                  </ListBox>

                  <DockPanel Grid.Row="1">
                    <mui:ModernButton x:Name="AddCarButton" DockPanel.Dock="Right" IconData="{StaticResource AddIconData}"
                        ToolTip="Create a new one (Ctrl+Shift+N)" Margin="4 0 0 0" Style="{StaticResource NonTransparent}"
                        Visibility="{Binding AddNewCommand.IsAbleToExecute, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />
                    <TextBlock Text="{Binding Status}" Margin="{StaticResource StatusMargin}" Foreground="{DynamicResource WindowTextReadOnly}" />
                  </DockPanel>
                </Grid>

                <!-- seperator -->
                <mui:ModernTabSplitter Grid.Column="1" SaveKey="AcListPage" />
                <mui:ModernFrame x:Name="PART_Frame" Grid.Column="2" Source="{TemplateBinding SelectedSource}" Margin="16 0 16 0" TransitionName="Normal"
                    TopSource="{x:Null}" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <DataTrigger Binding="{Binding IsEmpty}" Value="True">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ac:AcListPage">
              <mui:Cell>
                <DockPanel Margin="0 0 0 100" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <mui:ModernButton DockPanel.Dock="Left" x:Name="AddCarButton" IconData="{StaticResource AddIconData}"
                      ToolTip="Create a new one (Ctrl+Shift+N)" Margin="0 0 8 0" Style="{StaticResource NonTransparent}"
                      Visibility="{TemplateBinding AddNewCommand, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" Width="24"
                      Height="24" EllipseDiameter="22" />
                  <TextBlock Text="Nothing to display" Style="{StaticResource Heading1}" />
                </DockPanel>
              </mui:Cell>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
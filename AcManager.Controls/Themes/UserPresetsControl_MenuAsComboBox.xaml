<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/MenuItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="UserPresetsControlMenuItem" TargetType="MenuItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True" />

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
        <Setter Property="Padding" Value="7,3,8,3" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="Stretch">
                        <Grid Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                            </Grid.ColumnDefinitions>

                            <Path Name="Arrow" Grid.ColumnSpan="2" Margin="3,1,8,0" Fill="{TemplateBinding Foreground}"
                                    Data="{DynamicResource DownArrowGeometry}" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />

                            <ContentPresenter Grid.Column="0" ContentSource="Header" RecognizesAccessKey="False" Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Grid.Column="0" Placement="Bottom" Margin="1"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="4">
                                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />

                                        <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}"
                                                BorderBrush="{DynamicResource WindowBorderActive}" BorderThickness="1" Margin="0,-1,0,0">
                                            <!-- popup border thickness not dependent on BorderThickness property-->
                                            <ScrollViewer Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                                                Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                                                Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsSubmenuOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SpecialMenuItemHeaderControlTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="7,2,8,2" RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="RightArrow" Grid.Column="3" VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding MenuItem.Foreground}"
                        Data="{StaticResource RightArrow}" />
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Right" VerticalOffset="-3" HorizontalOffset="-2"
                    IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}" Focusable="False"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid Margin="4" Background="{DynamicResource PopupBackground}">
                    <Grid x:Name="Shdw">
                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />
                    </Grid>
                    <Border x:Name="SubMenuBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                            BorderThickness="1" Margin="0,-1,0,0">
                        <ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="True" Foreground="{DynamicResource ItemText}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="true" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextSelected}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                <Setter TargetName="Shdw" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SpecialMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True" Tag="{TemplateBinding MenuItem.Tag}" Name="Grid">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="7,2,8,2" RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ToolTip="{x:Null}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=Tag.HasToolTips, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="Grid" Property="ToolTip">
                    <Setter.Value>
                        <ToolTip DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                            <ContentPresenter IsHitTestVisible="False" Margin="4" Content="{Binding ToolTip}" />
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SpecialMenuItemBase" TargetType="MenuItem">
        <Setter Property="Template" Value="{StaticResource SpecialMenuItemControlTemplate}" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,2" />
                <Setter Property="Template" Value="{StaticResource SpecialMenuItemHeaderControlTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3" />
                <Setter Property="Template" Value="{StaticResource SpecialMenuItemHeaderControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpecialMenuItem2" TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="SpecialMenuItem3" TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItem2}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpecialMenuItem4" TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItem3}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpecialMenuItem5" TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItem4}" />
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- i'm sorry -->
    <Style x:Key="SpecialMenuItem" TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItemBase}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource SpecialMenuItem2}" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:AcManager.Controls" xmlns:helpers="clr-namespace:AcManager.Tools.Helpers;assembly=AcManager.Tools"
        xmlns:acSettingsControls="clr-namespace:AcManager.Tools.Helpers.AcSettingsControls;assembly=AcManager.Tools"
        xmlns:mui="http://firstfloorsoftware.com/ModernUI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WaitingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Waiting}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ItemsPanelTemplate x:Key="TwoColumnsPanel">
        <UniformGrid Columns="2" />
    </ItemsPanelTemplate>

    <DataTemplate x:Key="AxisEntryTemplate" DataType="{x:Type acSettingsControls:WheelAxleEntry}">
        <DockPanel Margin="0 0 0 20" Background="Transparent">
            <DockPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="Delete" />
                </ContextMenu>
            </DockPanel.ContextMenu>

            <Grid DockPanel.Dock="Bottom" Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle Fill="{DynamicResource ButtonBackground}" />
                <Rectangle Fill="{DynamicResource Accent}" Height="4" Margin="2"
                        Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                    <Rectangle.RenderTransform>
                        <ScaleTransform ScaleY="1" ScaleX="{Binding Value}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>

            <Grid DockPanel.Dock="Bottom" Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
                <Rectangle Margin="2 0 10 0" Name="Helper" />
                <Rectangle Fill="{DynamicResource ButtonBackground}" />
                <Rectangle Fill="{DynamicResource Accent}" Height="4" Width="8" Margin="2" HorizontalAlignment="Left"
                        Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                    <Rectangle.RenderTransform>
                        <TranslateTransform Y="0">
                            <TranslateTransform.X>
                                <MultiBinding Converter="{StaticResource MultiMultiplyConverter}">
                                    <Binding Path="Value" />
                                    <Binding ElementName="Helper" Path="ActualWidth" />
                                </MultiBinding>
                            </TranslateTransform.X>
                        </TranslateTransform>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>

            <DockPanel Margin="0 0 0 4" VerticalAlignment="Top" Width="200" DockPanel.Dock="Left">
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource Heading1}" Margin="0 -8 0 2" DockPanel.Dock="Top" />
                <Button Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                        Style="{StaticResource WaitingButton}">

                    <Grid HorizontalAlignment="Left">
                        <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                            <TextBlock Text="{Binding Input.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}" HorizontalAlignment="Left"
                                    TextTrimming="CharacterEllipsis" />
                            <TextBlock Text="{Binding Input.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left" Margin="0 8 0 0"
                                    Name="ProviderName" TextTrimming="CharacterEllipsis" />
                            <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" FontWeight="Normal" TextTrimming="CharacterEllipsis"
                                    Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}" />
                        </Grid>
                        <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                TextTrimming="CharacterEllipsis" FontWeight="Normal"
                                Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Button>
            </DockPanel>

            <StackPanel Margin="16 4 0 0" Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                <CheckBox IsChecked="{Binding Invert}" Margin="0 0 0 4">
                    <Label Content="Invert" />
                </CheckBox>

                <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                        Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding DegressOfRotation}" Mode="Positive" Postfix="°" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">Degress</mui:ValueLabel>
                    <Slider Minimum="40" Maximum="1180" Value="{Binding DegressOfRotation}" TickFrequency="20" TickPlacement="None" IsSnapToTickEnabled="True" />
                </DockPanel>

                <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding RangeFrom}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">From</mui:ValueLabel>
                    <Slider Minimum="0" Maximum="100" Value="{Binding RangeFrom}" />
                </DockPanel>

                <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding RangeTo}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">To</mui:ValueLabel>
                    <Slider Minimum="0" Maximum="100" Value="{Binding RangeTo}" />
                </DockPanel>

                <DockPanel Visibility="{Binding GammaMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding Gamma, StringFormat='{}{0:F2}'}" Mode="Number" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">Gamma</mui:ValueLabel>
                    <Slider Minimum="1" Maximum="5" Value="{Binding Gamma}" />
                </DockPanel>

                <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                        Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding Filter}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">Filter</mui:ValueLabel>
                    <Slider Minimum="0" Maximum="100" Value="{Binding Filter}" />
                </DockPanel>

                <DockPanel Visibility="{Binding RangeMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                        Margin="0 0 0 4">
                    <mui:ValueLabel Value="{Binding SpeedSensitivity}" Mode="Integer" Postfix="%" VerticalAlignment="Center" Padding="0" Width="120"
                            DockPanel.Dock="Left">Speed sensitivity</mui:ValueLabel>
                    <Slider Minimum="0" Maximum="100" Value="{Binding SpeedSensitivity}" />
                </DockPanel>
            </StackPanel>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="ButtonEntryTemplate" DataType="{x:Type helpers:AcSettingsHolder+ControlsSettings+WheelButtonCombined}">
        <Grid Margin="0 0 0 4" Background="Transparent">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear wheel binding" Command="{Binding WheelButton.ClearCommand}" />
                    <MenuItem Header="Clear keyboard binding" Command="{Binding WheelButton.ClearCommand}" />
                </ContextMenu>
            </Grid.ContextMenu>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="1.5*" MinWidth="160" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding WheelButton.DisplayName, StringFormat='{}{0}:'}" Style="{StaticResource Label}" Grid.Column="0" Margin="20 0 0 0" />

            <Button Grid.Column="1" ToolTip="Steering wheel button" DataContext="{Binding WheelButton}"
                    Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                    Style="{StaticResource WaitingButton}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="Delete" />
                    </ContextMenu>
                </Button.ContextMenu>

                <Grid HorizontalAlignment="Stretch">
                    <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                        <TextBlock Text="{Binding Input.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}" HorizontalAlignment="Left"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="{Binding Input.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left" Margin="0 8 0 0"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}"
                                TextTrimming="CharacterEllipsis" />
                        <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    </Grid>
                    <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}"
                            TextTrimming="CharacterEllipsis" />
                </Grid>
            </Button>

            <Button Grid.Column="2" ToolTip="Keyboard button" Margin="4 0 0 0"
                    IsEnabled="{Binding CombineWithKeyboardInput, Source={x:Static helpers:AcSettingsHolder.Controls}}" DataContext="{Binding KeyboardButton}"
                    Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                    Style="{StaticResource WaitingButton}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="Delete" />
                    </ContextMenu>
                </Button.ContextMenu>

                <Grid HorizontalAlignment="Stretch">
                    <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                        <TextBlock Text="{Binding Input.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}"
                                TextTrimming="CharacterEllipsis" />
                        <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    </Grid>
                    <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}"
                            TextTrimming="CharacterEllipsis" />
                </Grid>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="HShifterButtonEntryTemplate" DataType="{x:Type acSettingsControls:WheelHShifterButtonEntry}">
        <DockPanel Margin="2" Background="Transparent">
            <DockPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="Delete" />
                </ContextMenu>
            </DockPanel.ContextMenu>

            <TextBlock Text="{Binding ShortName, StringFormat='{}{0}:'}" Style="{StaticResource Label}" DockPanel.Dock="Left" Margin="0 0 8 0" Width="20"
                    TextAlignment="Right" />
            <Button Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                    Style="{StaticResource WaitingButton}">
                <Grid HorizontalAlignment="Stretch">
                    <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                        <TextBlock Text="{Binding Input.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}"
                                TextTrimming="CharacterEllipsis" />
                        <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    </Grid>
                    <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}"
                            TextTrimming="CharacterEllipsis" />
                </Grid>
            </Button>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="KeyboardButtonEntryTemplate" DataType="{x:Type acSettingsControls:KeyboardButtonEntry}">
        <DockPanel Margin="2" Background="Transparent">
            <DockPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="Delete" />
                </ContextMenu>
            </DockPanel.ContextMenu>

            <TextBlock Text="{Binding DisplayName, StringFormat='{}{0}:'}" Style="{StaticResource Label}" DockPanel.Dock="Left" Margin="0 0 8 0" Width="120"
                    TextAlignment="Left" />
            <Button Command="{Binding ToggleWaitingCommand, Source={x:Static helpers:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                    Style="{StaticResource WaitingButton}" Margin="0 0 8 0">
                <Grid HorizontalAlignment="Stretch">
                    <Grid Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                        <TextBlock Text="{Binding Input.DisplayName}" Style="{StaticResource Heading2}" HorizontalAlignment="Left"
                                TextTrimming="CharacterEllipsis" />
                        <TextBlock Text="Click to assign" Style="{StaticResource Heading2}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                FontWeight="Normal" Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}"
                                TextTrimming="CharacterEllipsis" />
                        <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                                Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    </Grid>
                    <TextBlock Text="Waiting for input" Style="{StaticResource Heading2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            FontWeight="Normal" Visibility="{Binding Waiting, Converter={StaticResource BooleanToVisibilityConverter}}"
                            TextTrimming="CharacterEllipsis" />
                </Grid>
            </Button>
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>
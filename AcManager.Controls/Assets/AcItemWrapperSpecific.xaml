<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:acManagersNew="clr-namespace:AcManager.Tools.AcManagersNew;assembly=AcManager.Tools"
        xmlns:acObjectsNew="clr-namespace:AcManager.Tools.AcObjectsNew;assembly=AcManager.Tools"
        xmlns:acObjects="clr-namespace:AcManager.Tools.Objects;assembly=AcManager.Tools" xmlns:mui="http://firstfloorsoftware.com/ModernUI">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />-->
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
        <ResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="AcItemWrapperSpecific.ComboBoxItemTemplate" DataType="acManagersNew:AcItemWrapper">
        <TextBlock Text="{Binding Value.DisplayName}" />
    </DataTemplate>

    <DataTemplate x:Key="AcItemWrapperSpecific.ListItemTemplate" DataType="{x:Type acManagersNew:AcItemWrapper}">
        <ContentControl DataContext="{Binding Value}" Content="{Binding}">
            <ContentControl.Resources>
                <!-- placeholder -->
                <DataTemplate DataType="{x:Type acObjectsNew:AcPlaceholderNew}">
                    <TextBlock Text="{Binding DisplayName}" Margin="10 2 2 2" FontSize="{DynamicResource SmallFontSize}" TextTrimming="CharacterEllipsis"
                            HorizontalAlignment="Stretch" x:Name="DisplayNameText" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Enabled}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource WindowTextReadOnly}" TargetName="DisplayNameText" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>

                <!-- accommonobject -->
                <DataTemplate DataType="{x:Type acObjectsNew:AcCommonObject}">
                    <DockPanel HorizontalAlignment="Stretch" mui:Draggable.Enabled="True" Background="Transparent">
                        <Path Data="{StaticResource AlertIconData}" Width="16" Height="16" DockPanel.Dock="Right" Fill="{DynamicResource Error}"
                                Stretch="Uniform" Visibility="Collapsed" x:Name="ErrorIcon" />
                        <Ellipse Width="4" Height="4" VerticalAlignment="Center" HorizontalAlignment="Right" Fill="{DynamicResource Go}" Margin="4"
                                IsHitTestVisible="False" Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}"
                                DockPanel.Dock="Right" />
                        <TextBlock Text="{Binding DisplayName}" Margin="10 2 2 2" FontSize="{DynamicResource SmallFontSize}" TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Stretch" x:Name="DisplayNameText" ToolTip="{Binding Location}" />
                    </DockPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Enabled}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource WindowTextReadOnly}" TargetName="DisplayNameText" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NeedsMargin}" Value="True">
                            <Setter Property="Padding" Value="20 0 0 0" TargetName="DisplayNameText" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                            <Setter Property="FontWeight" Value="Bold" TargetName="DisplayNameText" />
                            <Setter Property="Visibility" Value="Visible" TargetName="ErrorIcon" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Changed}" Value="True">
                            <Setter Property="FontStyle" Value="Italic" TargetName="DisplayNameText" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>

                <!-- carskinobject -->
                <DataTemplate DataType="{x:Type acObjects:CarSkinObject}">
                    <DockPanel HorizontalAlignment="Stretch">
                        <mui:BetterImage Width="24" Height="24" DockPanel.Dock="Left" Margin="4 0 4 0" Filename="{Binding LiveryImage}" />
                        <Path Data="{StaticResource AlertIconData}" Width="16" Height="16" DockPanel.Dock="Right" Fill="{DynamicResource Error}"
                                Stretch="Uniform" Visibility="Collapsed" x:Name="ErrorIcon" />
                        <Ellipse Width="4" Height="4" VerticalAlignment="Center" HorizontalAlignment="Right" Fill="{DynamicResource Go}" Margin="4"
                                IsHitTestVisible="False" Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}"
                                DockPanel.Dock="Right" />
                        <TextBlock Text="{Binding DisplayName}" Margin="10 2 2 2" FontSize="{DynamicResource SmallFontSize}" TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Stretch" x:Name="DisplayNameText" ToolTip="{Binding Location}" VerticalAlignment="Center" />
                    </DockPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Enabled}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource WindowTextReadOnly}" TargetName="DisplayNameText" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NeedsMargin}" Value="True">
                            <Setter Property="Padding" Value="20 0 0 0" TargetName="DisplayNameText" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                            <Setter Property="FontWeight" Value="Bold" TargetName="DisplayNameText" />
                            <Setter Property="Visibility" Value="Visible" TargetName="ErrorIcon" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Changed}" Value="True">
                            <Setter Property="FontStyle" Value="Italic" TargetName="DisplayNameText" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="CarSkinItemTemplate" DataType="{x:Type acObjects:CarSkinObject}">
        <mui:BetterImage ToolTip="{Binding DisplayName}" Width="32" Height="32" Filename="{Binding LiveryImage}" ClearOnChange="True" />
    </DataTemplate>

    <DataTemplate x:Key="AcItemWrapperSpecific.CarSkinItemTemplate" DataType="{x:Type acManagersNew:AcItemWrapper}">
        <ContentControl Content="{Binding Value}" Width="32" Height="32" Background="Transparent">
            <ContentControl.Resources>
                <!-- placeholder -->
                <DataTemplate DataType="{x:Type acObjectsNew:AcPlaceholderNew}">
                    <TextBlock Text="{Binding Id}" Style="{StaticResource Label}" />
                </DataTemplate>

                <!-- accommonobject -->
                <DataTemplate DataType="{x:Type acObjects:CarSkinObject}">
                    <mui:BetterImage ToolTip="{Binding DisplayName}" Filename="{Binding LiveryImage}" Width="32" Height="32" ClearOnChange="True" />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>

    <ToolTip x:Key="ShowroomPreviewToolTip">
        <mui:BetterImage Width="256" Height="144" Margin="4" Filename="{Binding PreviewImage}" />
    </ToolTip>

    <Style x:Key="CarBlockButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
</ResourceDictionary>
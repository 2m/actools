<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:a="clr-namespace:FirstFloor.ModernUI.Windows.Attached"
        xmlns:e="clr-namespace:FirstFloor.ModernUI.Effects" xmlns:mui="clr-namespace:FirstFloor.ModernUI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Slider.xaml" />
        <!--<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.Dark.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ColorPickerToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource ModernButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <c:Cell Background="Transparent">
                        <Ellipse x:Name="PART_Circle" Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}" />
                        <Path x:Name="PART_Icon" Width="12" Height="12" Fill="{TemplateBinding Background}" Stretch="Uniform" HorizontalAlignment="Right"
                                VerticalAlignment="Center" Margin="4"
                                Data="F1 M 38,20.5833L 53.8333,38L 33.25,58.5833L 15.8333,41.1667L 24.1458,32.8542C 24.1458,32.8542 42.3542,38.3958 44.3333,34.4375C 47.5,29.6875 39.5833,28.5 39.5833,30.0833C 41.1667,31.6667 42.3541,33.6459 42.3541,33.6459C 42.3541,33.6459 22.1667,33.25 19,25.3333C 17.4167,19 36.0208,22.5625 36.0208,22.5625L 38,20.5833 Z M 33.25,24.9375C 33.25,24.9375 23.3542,24.1459 23.3542,25.7292C 23.3542,27.3125 29.2917,28.1042 29.2917,28.1042L 33.25,24.9375 Z M 53.8333,36.4167L 42.75,23.75C 42.75,23.75 51.5395,29.9786 53.0416,30.4792C 54.2291,30.875 57,28.5 60.1667,30.0833C 63.3333,31.6667 60.1666,35.2292 60.1666,33.6459C 60.1666,32.0625 55.4167,33.25 55.4167,33.25C 63.3333,34.8333 64.9166,38 63.3333,39.5833C 61.75,41.1667 59.7708,41.1667 59.7708,39.5833C 59.7708,38 53.8333,36.4167 53.8333,36.4167 Z" />
                    </c:Cell>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Circle" Property="Fill" Value="Transparent" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerSliderThumb" TargetType="Thumb" BasedOn="{StaticResource VerticalSliderThumbStyle}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <c:Cell Background="Transparent">
                        <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill" Width="4" HorizontalAlignment="Left"
                                Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z" />
                        <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill" Width="4" HorizontalAlignment="Right"
                                Data="F1 M 50.6665,22.1667L 30.0833,37.6043L 30.0833,38.7918L 50.6665,53.8333L 50.6665,22.1667 Z" />
                    </c:Cell>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDragging}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDragging}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerSlider" TargetType="Slider">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <c:Cell Background="Transparent" SnapsToDevicePixels="True" MinWidth="{TemplateBinding Slider.MinWidth}">
                        <Track x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource ColorPickerSliderThumb}" />
                            </Track.Thumb>
                        </Track>
                    </c:Cell>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerPaletteThumb" TargetType="Thumb" BasedOn="{StaticResource VerticalSliderThumbStyle}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <c:Cell Background="Transparent">
                        <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill"
                                Data="F1 M 22.2448,39.5833L 19,39.5833L 19,36.4167L 22.2448,36.4167C 22.9875,28.9363 28.9363,22.9875 36.4167,22.2448L 36.4167,19L 39.5833,19L 39.5833,22.2448C 47.0637,22.9875 53.0125,28.9363 53.7552,36.4167L 57,36.4167L 57,39.5833L 53.7552,39.5833C 53.0125,47.0637 47.0637,53.0125 39.5833,53.7552L 39.5833,57L 36.4167,57L 36.4167,53.7552C 28.9363,53.0125 22.9875,47.0637 22.2448,39.5833 Z M 25.4313,36.4167L 28.5,36.4167L 28.5,39.5833L 25.4313,39.5833C 26.1458,45.313 30.687,49.8542 36.4167,50.5687L 36.4167,47.5L 39.5833,47.5L 39.5833,50.5687C 45.313,49.8542 49.8542,45.313 50.5686,39.5833L 47.5,39.5833L 47.5,36.4167L 50.5686,36.4167C 49.8542,30.687 45.313,26.1458 39.5833,25.4314L 39.5833,28.5L 36.4167,28.5L 36.4167,25.4314C 30.687,26.1458 26.1458,30.687 25.4313,36.4167 Z" />
                    </c:Cell>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:ColorPickerPanel">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource InputText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Padding" Value="4" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ColorPickerPanel">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel Orientation="Horizontal" Height="256" Margin="10">
                            <c:Cell Width="256" Height="256">
                                <Rectangle x:Name="PART_Palette" Fill="Black">
                                    <Rectangle.Effect>
                                        <e:ColorPickerHuePaletteEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Thumb x:Name="PART_Thumb" Style="{StaticResource ColorPickerPaletteThumb}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform X="{Binding ThumbX, RelativeSource={RelativeSource TemplatedParent}}"
                                                Y="{Binding ThumbY, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </c:Cell>

                            <c:Cell Margin="8 -5" Width="22">
                                <Rectangle x:Name="PART_SliderBackground" Fill="Black" Margin="4 5">
                                    <Rectangle.Effect>
                                        <e:ColorPickerHueSliderEffect />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Slider x:Name="PART_Slider" Style="{StaticResource ColorPickerSlider}" Minimum="0" Maximum="359"
                                        Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                            </c:Cell>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="21" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="80" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <c:ModernButton Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Right" VerticalAlignment="Top"
                                        ToolTip="{x:Static mui:UiStrings.PickColorFromScreen}" x:Name="PART_PickerButton"
                                        IconData="F1 M 23.7387,4.75L 26.8864,7.89765C 26.55,7.18267 26.3621,6.38412 26.3621,5.54166C 26.3621,2.48109 28.8432,-3.8147e-006 31.9037,-3.8147e-006C 34.9643,-3.8147e-006 37.4454,2.48109 37.4454,5.54166C 37.4454,8.60224 34.9643,11.0833 31.9037,11.0833C 31.0613,11.0833 30.2627,10.8953 29.5477,10.559L 32.6954,13.7067C 33.3137,14.325 33.3137,15.3275 32.6954,15.9459L 32.2879,16.3533C 31.6696,16.9717 30.6671,16.9717 30.0488,16.3533L 21.0921,7.39665C 20.4737,6.77831 20.4737,5.77581 21.0921,5.15747L 21.4995,4.74999C 22.1179,4.13166 23.1204,4.13166 23.7387,4.75 Z M 21.3521,8.84414L 28.607,16.3476C 28.607,16.3476 15.2787,30.0833 7.46011,32.926C 5.68583,34.5024 3.42322,36.4035 1.70399,37.4761L 0,35.7721C 1.05699,34.0706 2.92172,31.8309 4.50135,30.0382C 7.36206,22.1667 21.3521,8.84414 21.3521,8.84414 Z" />

                                <StackPanel Margin="0 0 0 8" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="80">
                                    <Rectangle x:Name="PART_OriginalColor" Height="32" Margin="0 0 0 4"
                                            Fill="{Binding OriginalColor, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}" />
                                    <Rectangle Height="32" Margin="0 0 0 8"
                                            Fill="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}" />
                                </StackPanel>

                                <RadioButton Grid.Column="0" Grid.Row="4" GroupName="Red"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Red}}" />
                                <RadioButton Grid.Column="0" Grid.Row="5" GroupName="Green"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Green}}" />
                                <RadioButton Grid.Column="0" Grid.Row="6" GroupName="Blue"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Blue}}" />

                                <RadioButton Grid.Column="0" Grid.Row="1" GroupName="Hue"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Hue}}" />
                                <RadioButton Grid.Column="0" Grid.Row="2" GroupName="Saturation"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Saturation}}" />
                                <RadioButton Grid.Column="0" Grid.Row="3" GroupName="Brightness"
                                        IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Brightness}}" />

                                <c:ValueLabel Grid.Column="1" Grid.Row="4" Content="R" Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:ValueLabel Grid.Column="1" Grid.Row="5" Content="G" Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:ValueLabel Grid.Column="1" Grid.Row="6" Content="B" Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />

                                <c:ValueLabel Grid.Column="1" Grid.Row="1" Content="H" Postfix="°"
                                        Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:ValueLabel Grid.Column="1" Grid.Row="2" Content="S" Postfix="%"
                                        Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:ValueLabel Grid.Column="1" Grid.Row="3" Content="B" Postfix="%"
                                        Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />

                                <Slider Grid.Column="2" Grid.Row="4" Minimum="0" Maximum="255"
                                        Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="2" Grid.Row="5" Minimum="0" Maximum="255"
                                        Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="2" Grid.Row="6" Minimum="0" Maximum="255"
                                        Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />

                                <Slider Grid.Column="2" Grid.Row="1" Minimum="0" Maximum="359"
                                        Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="2" Grid.Row="2" Minimum="0" Maximum="100"
                                        Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="2" Grid.Row="3" Minimum="0" Maximum="100"
                                        Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBright" Value="True">
                            <Setter TargetName="PART_Thumb" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Saturation}">
                            <Setter TargetName="PART_Slider" Property="Maximum" Value="100" />
                            <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Palette" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerSaturationPaletteEffect Saturation="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SliderBackground" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerSaturationSliderEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}"
                                            Brightness="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Brightness}">
                            <Setter TargetName="PART_Slider" Property="Maximum" Value="100" />
                            <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Palette" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerBrightnessPaletteEffect Brightness="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SliderBackground" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerBrightnessSliderEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}"
                                            Saturation="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Red}">
                            <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
                            <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Palette" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerRedPaletteEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SliderBackground" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerRedSliderEffect Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}"
                                            Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Green}">
                            <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
                            <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Palette" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerGreenPaletteEffect Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SliderBackground" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerGreenSliderEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}"
                                            Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Blue}">
                            <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
                            <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Palette" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerBluePaletteEffect Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SliderBackground" Property="Effect">
                                <Setter.Value>
                                    <e:ColorPickerBlueSliderEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}"
                                            Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:ColorPicker">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="2 1 21 1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ColorPicker">
                    <c:Cell>
                        <c:BetterTextBox x:Name="PART_TextBox"
                                Text="{Binding DisplayColor, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                Padding="{TemplateBinding Padding}" Placeholder="{x:Static mui:UiStrings.SelectColor}" />
                        <ToggleButton x:Name="PART_Button" HorizontalAlignment="Right" Margin="3 2 5 0"
                                Background="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}"
                                Style="{StaticResource ColorPickerToggleButton}"
                                IsHitTestVisible="{Binding ElementName=PART_Popup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}" />
                        <Popup x:Name="PART_Popup" PlacementTarget="{Binding ElementName=PART_TextBox}" Placement="Bottom" HorizontalOffset="-4"
                                IsOpen="{Binding IsChecked, ElementName=PART_Button, Mode=TwoWay}" VerticalOffset="-5" StaysOpen="False"
                                AllowsTransparency="True" PopupAnimation="Slide">
                            <c:Cell x:Name="PART_Root" Margin="4" HorizontalAlignment="Center">
                                <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                                <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />
                                <c:ColorPickerPanel x:Name="PART_Panel" Background="{DynamicResource PopupBackground}" BorderThickness="0" Margin="1"
                                        Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Border BorderBrush="{DynamicResource Accent}" BorderThickness="1" />
                            </c:Cell>
                        </Popup>
                    </c:Cell>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextHover}" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
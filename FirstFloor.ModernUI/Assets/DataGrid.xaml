<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:attached="clr-namespace:FirstFloor.ModernUI.Windows.Attached">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/FancyScroll.xaml" />
    <ResourceDictionary Source="Fonts.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}"
      BasedOn="{StaticResource BaseButtonStyle}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
  </Style>

  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <c:Cell>
            <DataGridColumnHeader IsHitTestVisible="False" x:Name="PART_FillerColumnHeader" />
            <ItemsPresenter />
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnFloatingHeaderStyle" TargetType="{x:Type Control}">
    <Setter Property="Opacity" Value="0.6" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}">
            <Canvas x:Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnHeaderDropSeparatorStyle" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{DynamicResource DataGridDropSeparator}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">-->
  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="CacheMode">
      <Setter.Value>
        <BitmapCache EnableClearType="True" />
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <!-- auto? -->
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter
                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                  Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DetailsVisibility}" />
              <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="AlternationIndex" Value="1">
        <Setter Property="Background" Value="#11888888" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <c:Cell SnapsToDevicePixels="True">
            <Rectangle Fill="{TemplateBinding Background}" />
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundHover}" />
            </Trigger>-->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    <Setter Property="Padding" Value="8 4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <c:Cell>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
              <DockPanel x:Name="containerGrid">
                <Path x:Name="SortArrow" DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="6" Margin="4 0"
                    Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.4" Visibility="Hidden"
                    Data="M0,0 L1,0 0.5,1 z" />
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </DockPanel>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
          </c:Cell>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="CanUserSort" Value="False">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HorizontalContentAlignment" Value="Right">
              <Setter TargetName="SortArrow" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DataGridColumnHeader.CenterAlignment" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="DataGridColumnHeader.RightAlignment" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
    <Setter Property="HorizontalContentAlignment" Value="Right" />
  </Style>

  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
    <Setter Property="BorderThickness" Value="0 0 0 1" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <c:Cell>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                <Control SnapsToDevicePixels="False"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                    Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}" />
              </StackPanel>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{StaticResource RowHeaderGripperStyle}" />
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource RowHeaderGripperStyle}" />
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
      </Trigger>
      <Trigger Property="IsRowSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="Background" Value="{DynamicResource DataGridBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridGridLines}" />
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridGridLines}" />
    <Setter Property="DragIndicatorStyle" Value="{StaticResource ColumnFloatingHeaderStyle}" />
    <Setter Property="DropLocationIndicatorStyle" Value="{StaticResource ColumnHeaderDropSeparatorStyle}" />
    <Setter Property="GridLinesVisibility" Value="None" />
    <Setter Property="AlternationCount" Value="2" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <ScrollViewer Focusable="False" x:Name="DG_ScrollViewer">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button Command="{x:Static DataGrid.SelectAllCommand}"
                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                        Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}}"
                        Focusable="False"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />

                    <DataGridColumnHeadersPresenter Grid.Column="1" x:Name="PART_ColumnHeadersPresenter"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                        CanContentScroll="{TemplateBinding CanContentScroll}" />

                    <c:BetterScrollBar Grid.Row="1" Grid.Column="1" x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                        AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource FancyScrollBarVertical}" />

                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Grid.Column="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Maximum="{TemplateBinding ScrollableWidth}"
                          ViewportSize="{TemplateBinding ViewportWidth}"
                          Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DataGrid.Lite" TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
    <Style.Resources>
      <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
          <Setter.Value>
            <ControlTemplate>
              <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGridRow}">
              <StackPanel x:Name="DGR_Border" SnapsToDevicePixels="True">
                <c:Cell SnapsToDevicePixels="True">
                  <Rectangle Fill="{TemplateBinding Background}" Opacity="{DynamicResource BackgroundAccentOpacity}" />
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </Border>
                </c:Cell>
                <DataGridDetailsPresenter
                    SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                    Visibility="{TemplateBinding DetailsVisibility}" />
              </StackPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="AlternationIndex" Value="1">
            <Setter Property="Background" Value="#11888888" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
            <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>

    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SelectionUnit" Value="FullRow" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="MinRowHeight" Value="24" />
    <Setter Property="IsReadOnly" Value="False" />

    <!--virtualization-->
    <Setter Property="EnableRowVirtualization" Value="True" />
    <Setter Property="EnableColumnVirtualization" Value="False" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True" />
    <Setter Property="VirtualizingStackPanel.ScrollUnit" Value="Pixel" />
    <Setter Property="VirtualizingStackPanel.CacheLengthUnit" Value="Item" />
    <Setter Property="VirtualizingStackPanel.CacheLength" Value="5,5" />

    <!--scrolling-->
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

    <!--simplifying-->
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="CanUserResizeColumns" Value="False" />
    <Setter Property="CanUserResizeRows" Value="False" />
    <Setter Property="CanUserReorderColumns" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <ScrollViewer Focusable="False" x:Name="DG_ScrollViewer" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <ScrollViewer.Template>
              <ControlTemplate TargetType="{x:Type ScrollViewer}">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <DataGridColumnHeadersPresenter Grid.Row="0" x:Name="PART_ColumnHeadersPresenter"
                      Visibility="{Binding HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                  <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />
                  <c:BetterScrollBar Grid.Row="1" x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                      AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource FancyScrollBarVertical}" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="PART_VerticalScrollBar" Property="attached:FancyScrollHelper.IsMouseOver" Value="True" />
                  </Trigger>
                  <Trigger Property="attached:FancyScrollHelper.InvertLocation" Value="True">
                    <Setter TargetName="PART_VerticalScrollBar" Property="HorizontalAlignment" Value="Left" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </ScrollViewer.Template>
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DataGrid.Lite.VisibleDetails" TargetType="DataGrid" BasedOn="{StaticResource DataGrid.Lite}">
    <Style.Resources>
      <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
          <Setter.Value>
            <ControlTemplate>
              <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGridRow}">
              <c:Cell SnapsToDevicePixels="True">
                <Rectangle Fill="{TemplateBinding Background}" Opacity="{DynamicResource BackgroundAccentOpacity}" />
                <Border x:Name="DGR_Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                  <StackPanel>
                    <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <DataGridDetailsPresenter
                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                        Visibility="{TemplateBinding DetailsVisibility}" />
                  </StackPanel>
                </Border>
              </c:Cell>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="AlternationIndex" Value="1">
            <Setter Property="Background" Value="#11888888" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
            <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>

    <Setter Property="RowDetailsVisibilityMode" Value="Visible" />
  </Style>

  <Style x:Key="DataGridCell.Number" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
    <Setter Property="HorizontalContentAlignment" Value="Right" />
  </Style>

  <!-- Semi-transparent selection -->
  <Style x:Key="DataGridRow.SemiTransparent" TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <c:Cell SnapsToDevicePixels="True" x:Name="PART_Border">
            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Width="4" />
            <Rectangle Fill="{TemplateBinding Background}" Opacity="{DynamicResource BackgroundAccentOpacity}" />
            <StackPanel x:Name="DGR_Border" SnapsToDevicePixels="True">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Border>
              <DataGridDetailsPresenter
                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                  Visibility="{TemplateBinding DetailsVisibility}" />
            </StackPanel>
          </c:Cell>
          <ControlTemplate.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
              <Setter Property="Background" Value="#11888888" TargetName="PART_Border" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DataGridCell.SemiTransparent" TargetType="{x:Type DataGridCell}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <c:Cell SnapsToDevicePixels="True">
            <!--<Rectangle Fill="{TemplateBinding Background}" Opacity="{DynamicResource BackgroundAccentOpacity}" />-->
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DataGridCell.SemiTransparent.Number" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCell.SemiTransparent}">
    <Setter Property="HorizontalAlignment" Value="Right" />
  </Style>
</ResourceDictionary>
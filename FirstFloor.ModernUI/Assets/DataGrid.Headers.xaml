<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Easing.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Fonts.xaml" />
    <ResourceDictionary Source="DataGrid.Base.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- Column headers -->
  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    <Setter Property="Padding" Value="8 4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <c:Cell>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
              <DockPanel x:Name="containerGrid">
                <Path x:Name="SortArrow" DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="6" Margin="4 0"
                    Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.4" Visibility="Hidden"
                    Data="M0,0 L1,0 0.5,1 z" />
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </DockPanel>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
          </c:Cell>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="CanUserSort" Value="False">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HorizontalContentAlignment" Value="Right">
              <Setter TargetName="SortArrow" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="CanUserSort" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="CanUserSort" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DataGridColumnHeader.CenterAlignment" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>

  <Style x:Key="DataGridColumnHeader.RightAlignment" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
    <Setter Property="HorizontalContentAlignment" Value="Right" />
  </Style>

  <!-- Row headers -->
  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
    <Setter Property="BorderThickness" Value="0 0 0 1" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <c:Cell>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                <Control SnapsToDevicePixels="False"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                    Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}" />
              </StackPanel>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{StaticResource RowHeaderGripperStyle}" />
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource RowHeaderGripperStyle}" />
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
      </Trigger>
      <Trigger Property="IsRowSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
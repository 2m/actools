<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:mui="clr-namespace:FirstFloor.ModernUI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/BetterTextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ProperPasswordBoxControlTemplate.Basic" TargetType="c:ProperPasswordBox">
        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <c:Cell>
                <c:BooleanSwitch Value="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}">
                    <c:BooleanSwitch.False>
                        <PasswordBox x:Name="PART_PasswordBox" Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderThickness="0"
                                Margin="2 1" Padding="0" CaretBrush="{TemplateBinding CaretBrush}" SelectionBrush="{TemplateBinding SelectionBrush}">
                            <PasswordBox.ContextMenu>
                                <c:InheritingContextMenu>
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Cut" />
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Copy" />
                                    <MenuItem Command="ApplicationCommands.Paste" />
                                    <MenuItem Command="ApplicationCommands.Delete" />
                                    <Separator />
                                    <MenuItem Command="ApplicationCommands.SelectAll" />
                                    <Separator />
                                    <MenuItem Header="{x:Static mui:UiStrings.ShowPassword}"
                                            Command="{Binding TogglePasswordVisibilityCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsChecked="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                </c:InheritingContextMenu>
                            </PasswordBox.ContextMenu>
                        </PasswordBox>
                    </c:BooleanSwitch.False>
                    <c:BooleanSwitch.True>
                        <c:BetterTextBox x:Name="PART_TextBox" Background="Transparent" BorderThickness="0" Margin="4 1 3 1" Padding="0"
                                Style="{StaticResource BetterComboBoxEditableTextBox}"
                                Text="{Binding Password, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                CaretBrush="{TemplateBinding CaretBrush}" SelectionBrush="{TemplateBinding SelectionBrush}">
                            <c:BetterTextBox.ContextMenu>
                                <c:InheritingContextMenu>
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Cut" />
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Copy" />
                                    <MenuItem Command="ApplicationCommands.Paste" />
                                    <MenuItem Command="ApplicationCommands.Delete" />
                                    <Separator />
                                    <MenuItem Command="ApplicationCommands.SelectAll" />
                                    <Separator />
                                    <MenuItem Header="{x:Static mui:UiStrings.ShowPassword}"
                                            Command="{Binding TogglePasswordVisibilityCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsChecked="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                </c:InheritingContextMenu>
                            </c:BetterTextBox.ContextMenu>
                        </c:BetterTextBox>
                    </c:BooleanSwitch.True>
                </c:BooleanSwitch>
                <TextBlock x:Name="Placeholder" Text="{TemplateBinding Placeholder}" Visibility="Collapsed" Margin="2 0" Padding="{TemplateBinding Padding}"
                        Opacity="0.5" IsHitTestVisible="False" RenderOptions.ClearTypeHint="Enabled" />
            </c:Cell>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Password" Value="" />
                    <Condition Property="IsFocused" Value="False" SourceName="PART_PasswordBox" />
                    <Condition Property="IsFocused" Value="False" SourceName="PART_TextBox" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource InputText}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger SourceName="PART_PasswordBox" Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ProperPasswordBoxControlTemplate.Borderless" TargetType="{x:Type c:ProperPasswordBox}">
        <c:AdornedControl x:Name="Outline" IsAdornerVisible="False">
            <c:AdornedControl.AdornerContent>
                <Border Margin="{StaticResource BorderlessOutline}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" IsHitTestVisible="False" />
            </c:AdornedControl.AdornerContent>
            <c:Cell>
                <c:BooleanSwitch Value="{TemplateBinding VisiblePassword}">
                    <c:BooleanSwitch.False>
                        <PasswordBox x:Name="PART_PasswordBox" Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderThickness="0"
                                Margin="-2 0" Padding="0" CaretBrush="{TemplateBinding CaretBrush}" SelectionBrush="{TemplateBinding SelectionBrush}">
                            <PasswordBox.ContextMenu>
                                <c:InheritingContextMenu>
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Cut" />
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Copy" />
                                    <MenuItem Command="ApplicationCommands.Paste" />
                                    <MenuItem Command="ApplicationCommands.Delete" />
                                    <Separator />
                                    <MenuItem Command="ApplicationCommands.SelectAll" />
                                    <Separator />
                                    <MenuItem Header="{x:Static mui:UiStrings.ShowPassword}"
                                            Command="{Binding TogglePasswordVisibilityCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsChecked="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                </c:InheritingContextMenu>
                            </PasswordBox.ContextMenu>
                        </PasswordBox>
                    </c:BooleanSwitch.False>
                    <c:BooleanSwitch.True>
                        <c:BetterTextBox x:Name="PART_TextBox" Background="Transparent" BorderThickness="0" Padding="0"
                                Style="{StaticResource BetterComboBoxEditableTextBox}"
                                Text="{Binding Password, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                CaretBrush="{TemplateBinding CaretBrush}" SelectionBrush="{TemplateBinding SelectionBrush}">
                            <c:BetterTextBox.ContextMenu>
                                <c:InheritingContextMenu>
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Cut" />
                                    <MenuItem IsEnabled="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}}"
                                            Command="ApplicationCommands.Copy" />
                                    <MenuItem Command="ApplicationCommands.Paste" />
                                    <MenuItem Command="ApplicationCommands.Delete" />
                                    <Separator />
                                    <MenuItem Command="ApplicationCommands.SelectAll" />
                                    <Separator />
                                    <MenuItem Header="{x:Static mui:UiStrings.ShowPassword}"
                                            Command="{Binding TogglePasswordVisibilityCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsChecked="{Binding VisiblePassword, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                </c:InheritingContextMenu>
                            </c:BetterTextBox.ContextMenu>
                        </c:BetterTextBox>
                    </c:BooleanSwitch.True>
                </c:BooleanSwitch>
                <TextBlock x:Name="Placeholder" Text="{TemplateBinding Placeholder}" Visibility="Collapsed" Opacity="0.5" IsHitTestVisible="False"
                        RenderOptions.ClearTypeHint="Enabled" />
            </c:Cell>
        </c:AdornedControl>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Password" Value="" />
                    <Condition Property="IsFocused" Value="False" SourceName="PART_PasswordBox" />
                    <Condition Property="IsFocused" Value="False" SourceName="PART_TextBox" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger SourceName="PART_PasswordBox" Property="IsFocused" Value="True">
                <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
                <Setter TargetName="Outline" Property="Order" Value="5" />
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
                <Setter TargetName="Outline" Property="Order" Value="5" />
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ProperPasswordBoxBase" TargetType="c:ProperPasswordBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />

        <Setter Property="CaretBrush" Value="{DynamicResource InputText}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2 1 1 1" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />

        <Setter Property="Template" Value="{StaticResource ProperPasswordBoxControlTemplate.Basic}" />
    </Style>

    <Style TargetType="c:ProperPasswordBox" BasedOn="{StaticResource ProperPasswordBoxBase}">
        <Setter Property="Foreground" Value="{DynamicResource InputText}" />
    </Style>

    <Style x:Key="ProperPasswordBox.Borderless" TargetType="{x:Type c:ProperPasswordBox}" BasedOn="{StaticResource ProperPasswordBoxBase}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource ProperPasswordBoxControlTemplate.Borderless}" />
    </Style>
</ResourceDictionary>
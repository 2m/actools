<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:modernUi="clr-namespace:FirstFloor.ModernUI" xmlns:controls="clr-namespace:FirstFloor.ModernUI.Windows.Controls"
    xmlns:attached="clr-namespace:FirstFloor.ModernUI.Windows.Attached">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="HintMarkStyle" TargetType="attached:FancyHintControl">
    <Setter Property="Margin" Value="-4000" />
    <Setter Property="IsHitTestVisible" Value="True" />
    <Setter Property="Background" Value="{DynamicResource FancyHintBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource FancyHintText}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="attached:FancyHintControl">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle.Control}">
              <Setter Property="Background" Value="{DynamicResource FancyHintButtonBackground}" />
              <Setter Property="BorderBrush" Value="{DynamicResource FancyHintButtonBorder}" />
              <Setter Property="Foreground" Value="{DynamicResource FancyHintButtonText}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                      <ContentPresenter x:Name="Presenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Foreground" Value="{DynamicResource FancyHintButtonTextDisabled}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Background" Value="{DynamicResource FancyHintButtonBackgroundHover}" />
                  <Setter Property="BorderBrush" Value="{DynamicResource FancyHintButtonBorderHover}" />
                  <Setter Property="Foreground" Value="{DynamicResource FancyHintButtonTextHover}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Background" Value="{DynamicResource FancyHintButtonBackgroundPressed}" />
                  <Setter Property="BorderBrush" Value="{DynamicResource FancyHintButtonBorderPressed}" />
                  <Setter Property="Foreground" Value="{DynamicResource FancyHintButtonTextPressed}" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                  <Setter Property="Background" Value="{DynamicResource FancyHintButtonBackgroundPressed}" />
                  <Setter Property="BorderBrush" Value="{DynamicResource FancyHintButtonBorderPressed}" />
                  <Setter Property="Foreground" Value="{DynamicResource FancyHintButtonTextPressed}" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                  <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </ControlTemplate.Resources>

          <controls:Cell x:Name="PART_Cell" Width="72" Height="72" attached:VisibilityAnimation.Visible="False"
              HorizontalAlignment="{TemplateBinding HorizontalPositionAlignment}" VerticalAlignment="{TemplateBinding VerticalPositionAlignment}">
            <Border Margin="-4000 -4000 72 -4000" Background="{TemplateBinding Background}" />
            <Border Margin="72 -4000 -4000 -4000" Background="{TemplateBinding Background}" />
            <Border Margin="0 -4000 0 72" Background="{TemplateBinding Background}" />
            <Border Margin="0 72 0 -4000" Background="{TemplateBinding Background}" />
            <!--<Border Width="1" Background="Red" HorizontalAlignment="Center" />
                        <Border Height="1" Background="Red" VerticalAlignment="Center" />-->
            <Border Margin="0 0 0 0" Background="{TemplateBinding Background}">
              <Border.Clip>
                <CombinedGeometry GeometryCombineMode="Exclude">
                  <CombinedGeometry.Geometry1>
                    <RectangleGeometry Rect="0 0 72 72" />
                  </CombinedGeometry.Geometry1>
                  <CombinedGeometry.Geometry2>
                    <EllipseGeometry RadiusX="36" RadiusY="36" Center="36 36" />
                  </CombinedGeometry.Geometry2>
                </CombinedGeometry>
              </Border.Clip>
            </Border>
            <DockPanel x:Name="PART_Panel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <controls:SpacingStackPanel DockPanel.Dock="Top" Margin="0 0 0 20" Spacing="12"
                  DataContext="{Binding Hint, RelativeSource={RelativeSource TemplatedParent}}" MaxWidth="240" Effect="{DynamicResource FancyHintTextEffect}">
                <controls:BbCodeBlock x:Name="PART_Header" Style="{StaticResource Title}" BbCode="{Binding Header}" />
                <controls:BbCodeBlock Style="{StaticResource Small}" BbCode="{Binding Description}" Width="{Binding ActualWidth, ElementName=PART_Header}" />
              </controls:SpacingStackPanel>
              <DockPanel Effect="{DynamicResource FancyHintButtonsEffect}">
                <Button x:Name="PART_DisableHintsButton" Content="Disable occasional hints" DockPanel.Dock="Right" />
                <Button x:Name="PART_CloseButton" Content="Got it" Margin="0 0 4 0" />
              </DockPanel>
            </DockPanel>
          </controls:Cell>

          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Left" />
                <Condition Property="VerticalContentAlignment" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="54 56 -720 -720" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Right" />
                <Condition Property="VerticalContentAlignment" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="-720 56 54 -720" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Center" />
                <Condition Property="VerticalContentAlignment" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="-720 56 -720 -720" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Left" />
                <Condition Property="VerticalContentAlignment" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="54 -720 -720 56" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Right" />
                <Condition Property="VerticalContentAlignment" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="-720 -720 54 56" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HorizontalContentAlignment" Value="Center" />
                <Condition Property="VerticalContentAlignment" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Panel" Property="Margin" Value="-720 -720 -720 56" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
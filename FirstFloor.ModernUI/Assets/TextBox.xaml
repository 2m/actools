<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:FirstFloor.ModernUI.Windows.Controls">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="ContextMenu.xaml" />
    <ResourceDictionary Source="Converters.xaml" />
    <ResourceDictionary Source="Fonts.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <PathGeometry x:Key="AlertIconData">F1 M 38,22.1667C 41.1666,22.1667 57,52.25 55.4166,53.8333C 53.8333,55.4167 22.1667,55.4167 20.5833,53.8333C 19,52.25 34.8333,22.1667 38,22.1667 Z M 38,45.9167C 36.6883,45.9167 35.625,46.98 35.625,48.2917C 35.625,49.6034 36.6883,50.6667 38,50.6667C 39.3116,50.6667 40.375,49.6034 40.375,48.2917C 40.375,46.98 39.3116,45.9167 38,45.9167 Z M 35.625,31.6667L 36.4166,44.3333L 39.5833,44.3333L 40.375,31.6667L 35.625,31.6667 Z</PathGeometry>

  <ControlTemplate x:Key="ErrorTemplate.Basic">
    <StackPanel>
      <Border BorderThickness="1" BorderBrush="#FFDC000C" VerticalAlignment="Top" Margin="-2" Padding="2">
        <controls:Cell>
          <AdornedElementPlaceholder x:Name="PART_Adorner" Margin="-1" />
          <Path Data="{StaticResource AlertIconData}" SnapsToDevicePixels="True" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center"
              Fill="#FFDC000C" x:Name="ErrorIcon" Margin="4 0" Height="10" Width="10" />
        </controls:Cell>
      </Border>
      <Border x:Name="PART_ErrorBorder" Background="#FFDC000C" Margin="-2 2 -2 0" Opacity="0" CornerRadius="0" IsHitTestVisible="False" MinHeight="24"
          HorizontalAlignment="Right">
        <TextBlock Text="{Binding ElementName=PART_Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" Margin="8 2 8 3"
            TextWrapping="Wrap" MaxWidth="{Binding ActualWidth, Converter={StaticResource SumConverter}, ConverterParameter=-14, ElementName=PART_Adorner}" />
      </Border>
    </StackPanel>
    <ControlTemplate.Triggers>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <Binding ElementName="PART_Adorner" Path="AdornedElement.IsKeyboardFocusWithin" />
        </DataTrigger.Binding>
        <DataTrigger.EnterActions>
          <BeginStoryboard x:Name="FadeInStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00.15" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <StopStoryboard BeginStoryboardName="FadeInStoryboard" />
          <BeginStoryboard x:Name="FadeOutStoryBoard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ErrorTemplate.Borderless">
    <StackPanel>
      <controls:Cell>
        <AdornedElementPlaceholder x:Name="PART_Adorner" Margin="2" />
        <Border BorderThickness="1" BorderBrush="#FFDC000C" IsHitTestVisible="False" Margin="-3" />
        <Path Data="{StaticResource AlertIconData}" SnapsToDevicePixels="True" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center"
            Fill="#FFDC000C" x:Name="ErrorIcon" Margin="4 0" Height="10" Width="10" />
      </controls:Cell>
      <Border x:Name="PART_ErrorBorder" Background="#FFDC000C" Margin="-3 2 -3 0" Opacity="0" CornerRadius="0" IsHitTestVisible="False" MinHeight="24"
          HorizontalAlignment="Right">
        <TextBlock Text="{Binding ElementName=PART_Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" Margin="8 2 8 3"
            TextWrapping="Wrap" MaxWidth="{Binding ActualWidth, Converter={StaticResource SumConverter}, ConverterParameter=-14, ElementName=PART_Adorner}" />
      </Border>
    </StackPanel>
    <ControlTemplate.Triggers>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <Binding ElementName="PART_Adorner" Path="AdornedElement.IsKeyboardFocusWithin" />
        </DataTrigger.Binding>
        <DataTrigger.EnterActions>
          <BeginStoryboard x:Name="FadeInStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00.15" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <StopStoryboard BeginStoryboardName="FadeInStoryboard" />
          <BeginStoryboard x:Name="FadeOutStoryBoard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ErrorTemplate.Borderless.ExtraPadding">
    <StackPanel>
      <controls:Cell>
        <AdornedElementPlaceholder x:Name="PART_Adorner" Margin="2" />
        <Border BorderThickness="1" BorderBrush="#FFDC000C" IsHitTestVisible="False" Margin="-3" />
        <Path Data="{StaticResource AlertIconData}" SnapsToDevicePixels="True" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center"
            Fill="#FFDC000C" x:Name="ErrorIcon" Margin="4 0 20 0" Height="10" Width="10" />
      </controls:Cell>
      <Border x:Name="PART_ErrorBorder" Background="#FFDC000C" Margin="-3 2 -3 0" Opacity="0" CornerRadius="0" IsHitTestVisible="False" MinHeight="24"
          HorizontalAlignment="Right">
        <TextBlock Text="{Binding ElementName=PART_Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" Margin="8 2 8 3"
            TextWrapping="Wrap" MaxWidth="{Binding ActualWidth, Converter={StaticResource SumConverter}, ConverterParameter=-14, ElementName=PART_Adorner}" />
      </Border>
    </StackPanel>
    <ControlTemplate.Triggers>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <Binding ElementName="PART_Adorner" Path="AdornedElement.IsKeyboardFocusWithin" />
        </DataTrigger.Binding>
        <DataTrigger.EnterActions>
          <BeginStoryboard x:Name="FadeInStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00.15" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <StopStoryboard BeginStoryboardName="FadeInStoryboard" />
          <BeginStoryboard x:Name="FadeOutStoryBoard">
            <Storyboard>
              <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="PART_ErrorBorder" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="TextBoxBase.CommonBase" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
    <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
    <Setter Property="CaretBrush" Value="{DynamicResource InputText}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2 1 1 1" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate.Basic}" />
    <Style.Triggers>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxReadOnlyContextMenu}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource TextBoxBase.CommonBase}">
    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
              Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource InputText}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsReadOnly" Value="False" />
                <Condition Property="IsEnabled" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
              <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
              <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}" />
  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}" />

  <!-- text-in-datagrid styles-->
  <Style x:Key="DataGridTextStyle" TargetType="TextBlock">
    <Setter Property="Margin" Value="2,0" />
  </Style>

  <Style x:Key="DataGridEditingTextStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
  </Style>

  <!-- textboxes as textblocks -->
  <Style x:Key="TextBoxAsTextBlock" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="-3 -1 -3 -1" />
    <Setter Property="TextOptions.TextFormattingMode" Value="{DynamicResource FormattingMode}" />
    <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.ReadOnly" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock}">
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="IsReadOnlyCaretVisible" Value="False" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              Margin="{TemplateBinding Padding}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Padding" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock}">
    <Setter Property="Padding" Value="-1 1 -1 1" />
    <Setter Property="Margin" Value="-2" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.LabelWithPadding" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock}">
    <Setter Property="FontFamily" Value="{StaticResource CondensedFont}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="VerticalAlignment" Value="Center" />

    <Setter Property="Padding" Value="7 -1 -3 -1" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Label" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock.LabelWithPadding}">
    <Setter Property="Padding" Value="-3 -1 -3 -1" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Label.ReadOnly" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock.ReadOnly}">
    <Setter Property="FontFamily" Value="{StaticResource CondensedFont}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="VerticalAlignment" Value="Center" />

    <Setter Property="Padding" Value="-3 -1 -3 -1" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Heading2" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock}">
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Heading2.ReadOnly" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock.ReadOnly}">
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Small" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock}">
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
  </Style>

  <Style x:Key="TextBoxAsTextBlock.Small.ReadOnly" TargetType="TextBox" BasedOn="{StaticResource TextBoxAsTextBlock.ReadOnly}">
    <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
    <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
  </Style>
</ResourceDictionary>